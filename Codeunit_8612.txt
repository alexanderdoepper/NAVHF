OBJECT Codeunit 8612 Config. Template Management
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=The template %1 is in this hierarchy and contains the same field.;ESP=La plantilla %1 se encuentra en esta jerarqu°a y contiene el mismo campo.;DEA=Die Vorlage %1 befindet sich in dieser Hierarchie und enthÑlt das gleiche Feld.';
      Text001@1003 : TextConst '@@@="%1 = Table ID, %2 = Table caption";ENU=A number series has not been set up for table %1 %2. The instance could not be created.;ESP=No se ha configurado una serie numÇrica para la tabla %1 %2. No se pudo crear la instancia.;DEA=FÅr Tabelle %1 %2 wurde keine Nummernserie eingerichtet. Die Instanz konnte nicht erstellt werden.';
      Text002@1000 : TextConst '@@@="%2 = Table ID, %3 = Table caption";ENU=The instance %1 already exists in table %2 %3.;ESP=La instancia %1 ya existe en la tabla %2 %3.;DEA=Die Instanz %1 ist bereits in Tabelle %2 %3 vorhanden.';
      Text003@1004 : TextConst 'ENU=The value for the key field %1 is not filled for the instance.;ESP=El valor para el campo de clave %1 no est† cumplimentado para la instancia.;DEA=Der Wert fÅr das SchlÅsselfeld %1 ist fÅr die Instanz nicht gefÅllt.';
      UpdatingRelatedTable@1002 : Boolean;

    PROCEDURE UpdateFromTemplateSelection@4(VAR RecRef@1000 : RecordRef);
    VAR
      ConfigTemplateHeader@1001 : Record 8618;
    BEGIN
      ConfigTemplateHeader.SETRANGE("Table ID",RecRef.NUMBER);
      IF PAGE.RUNMODAL(PAGE::"Config. Template List",ConfigTemplateHeader,ConfigTemplateHeader.Code) = ACTION::LookupOK THEN
        UpdateRecord(ConfigTemplateHeader,RecRef);
    END;

    PROCEDURE UpdateRecord@1(ConfigTemplateHeader@1000 : Record 8618;VAR RecRef@1001 : RecordRef);
    BEGIN
      IF TestKeyFields(RecRef) THEN BEGIN
        InsertTemplate(RecRef,ConfigTemplateHeader);
      END ELSE BEGIN
        InsertRecordWithKeyFields(RecRef,ConfigTemplateHeader);
        IF TestKeyFields(RecRef) THEN
          InsertTemplate(RecRef,ConfigTemplateHeader)
        ELSE
          ERROR(STRSUBSTNO(Text001,RecRef.NUMBER,RecRef.CAPTION));
      END;
    END;

    LOCAL PROCEDURE InsertTemplate@3(VAR RecRef@1000 : RecordRef;ConfigTemplateHeader@1001 : Record 8618);
    VAR
      ConfigTemplateLine@1002 : Record 8619;
      ConfigTemplateHeader2@1004 : Record 8618;
      FieldRef@1003 : FieldRef;
      RecRef2@1005 : RecordRef;
    BEGIN
      ConfigTemplateLine.SETRANGE("Data Template Code",ConfigTemplateHeader.Code);
      IF ConfigTemplateLine.FINDSET THEN
        REPEAT
          IF ConfigTemplateLine.Type = ConfigTemplateLine.Type::Field THEN BEGIN
            IF ConfigTemplateLine."Field ID" <> 0 THEN BEGIN
              FieldRef := RecRef.FIELD(ConfigTemplateLine."Field ID");
              ModifyRecordWithField(RecRef,FieldRef,ConfigTemplateLine."Default Value");
            END
          END ELSE
            IF ConfigTemplateLine."Template Code" <> '' THEN
              IF ConfigTemplateHeader2.GET(ConfigTemplateLine."Template Code") THEN
                IF ConfigTemplateHeader2."Table ID" = ConfigTemplateHeader."Table ID" THEN
                  InsertTemplate(RecRef,ConfigTemplateHeader2)
                ELSE BEGIN
                  UpdatingRelatedTable := TRUE;
                  RecRef2.OPEN(ConfigTemplateHeader2."Table ID");
                  UpdateRecord(ConfigTemplateHeader2,RecRef2);
                  UpdatingRelatedTable := FALSE;
                END;
        UNTIL ConfigTemplateLine.NEXT = 0;
    END;

    LOCAL PROCEDURE ModifyRecordWithField@39(VAR RecRef@1004 : RecordRef;FieldRef@1005 : FieldRef;Value@1002 : Text[250]);
    VAR
      ConfigValidateMgt@1000 : Codeunit 8617;
    BEGIN
      ConfigValidateMgt.ValidateFieldValue(RecRef,FieldRef,Value,FALSE);
      RecRef.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE TestKeyFields@2(VAR RecRef@1000 : RecordRef) : Boolean;
    VAR
      KeyRef@1003 : KeyRef;
      FieldRef@1002 : FieldRef;
      KeyFieldCount@1001 : Integer;
    BEGIN
      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        IF FORMAT(FieldRef.VALUE) = '' THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    PROCEDURE TestHierarchy@6(ConfigTemplateLine@1001 : Record 8619);
    VAR
      ConfigTemplateLine2@1000 : Record 8619;
    BEGIN
      IF ConfigTemplateLine.Type = ConfigTemplateLine.Type::Field THEN
        TestDuplicateFields(ConfigTemplateLine,ConfigTemplateLine."Field ID")
      ELSE BEGIN
        ConfigTemplateLine2.SETRANGE("Data Template Code",ConfigTemplateLine."Data Template Code");
        IF ConfigTemplateLine2.FINDSET THEN
          REPEAT
            TestDuplicateFields(ConfigTemplateLine,ConfigTemplateLine."Field ID");
          UNTIL ConfigTemplateLine2.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE TestDuplicateFields@7(ConfigTemplateLine@1001 : Record 8619;TestFieldID@1002 : Integer);
    VAR
      ConfigTemplateLine1@1000 : Record 8619;
      ConfigTemplateLine2@1003 : Record 8619;
    BEGIN
      ConfigTemplateLine1.SETRANGE("Data Template Code",ConfigTemplateLine."Data Template Code");
      IF ConfigTemplateLine1.FINDSET THEN
        REPEAT
          IF ConfigTemplateLine1.Type = ConfigTemplateLine1.Type::Field THEN BEGIN
            IF ConfigTemplateLine1."Field ID" = TestFieldID THEN
              ERROR(STRSUBSTNO(Text000,ConfigTemplateLine1."Data Template Code"));
          END ELSE BEGIN
            ConfigTemplateLine2.SETRANGE("Data Template Code",ConfigTemplateLine1."Template Code");
            IF ConfigTemplateLine2.FINDFIRST THEN
              TestDuplicateFields(ConfigTemplateLine2,TestFieldID);
          END;
        UNTIL ConfigTemplateLine1.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertRecordWithKeyFields@40(VAR RecRef@1000 : RecordRef;ConfigTemplateHeader@1002 : Record 8618);
    VAR
      ConfigTemplateLine@1001 : Record 8619;
      ConfigValidateMgt@1007 : Codeunit 8617;
      RecRef1@1006 : RecordRef;
      KeyRef@1003 : KeyRef;
      FieldRef@1004 : FieldRef;
      KeyFieldCount@1005 : Integer;
      MessageString@1008 : Text[250];
    BEGIN
      ConfigTemplateLine.SETRANGE("Data Template Code",ConfigTemplateHeader.Code);

      KeyRef := RecRef.KEYINDEX(1);
      FOR KeyFieldCount := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FieldRef := KeyRef.FIELDINDEX(KeyFieldCount);
        ConfigTemplateLine.SETRANGE("Field ID",FieldRef.NUMBER);
        IF ConfigTemplateLine.FINDFIRST THEN BEGIN
          ConfigValidateMgt.ValidateFieldValue(RecRef,FieldRef,ConfigTemplateLine."Default Value",FALSE);
        END ELSE
          IF KeyRef.FIELDCOUNT <> 1 THEN
            ERROR(STRSUBSTNO(Text003,FieldRef.NAME));
      END;

      RecRef1 := RecRef.DUPLICATE;

      IF RecRef1.FIND('=') THEN
        IF NOT UpdatingRelatedTable THEN BEGIN
          MessageString := MessageString + ' ' + FORMAT(FieldRef.VALUE);
          MessageString := DELCHR(MessageString,'<');
          ERROR(STRSUBSTNO(Text002,MessageString,RecRef.NUMBER,RecRef.CAPTION));
        END ELSE
          EXIT;

      RecRef.INSERT(TRUE);
    END;

    PROCEDURE SetUpdatingRelatedTable@5(NewUpdatingRelatedTable@1000 : Boolean);
    BEGIN
      UpdatingRelatedTable := NewUpdatingRelatedTable;
    END;

    BEGIN
    END.
  }
}

