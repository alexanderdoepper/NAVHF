OBJECT Page 9807 User Card
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=User Card;
               ESP=Ficha de usuario;
               DEA=Benutzerkarte];
    SourceTable=Table2000000120;
    DataCaptionExpr="Full Name";
    DelayedInsert=Yes;
    PageType=Card;
    OnInit=BEGIN
             DeployedToAzure := IdentityManagement.IsAzure;
           END;

    OnAfterGetRecord=BEGIN
                       WindowsUserName := IdentityManagement.UserName("Windows Security ID");

                       TESTFIELD("User Name");

                       Password := IdentityManagement.GetMaskedNavPassword("User Security ID");
                       WebServiceID := IdentityManagement.GetWebServicesKey("User Security ID");
                       ACSStatus := IdentityManagement.GetACSStatus("User Security ID");
                       WebServiceExpiryDate := IdentityManagement.GetWebServiceExpiryDate("User Security ID");
                     END;

    OnNewRecord=BEGIN
                  WindowsUserName := '';
                  Password := '';
                  "Change Password" := FALSE;
                  WebServiceID := '';
                  CLEAR(WebServiceExpiryDate);
                END;

    OnInsertRecord=BEGIN
                     "User Security ID" := CREATEGUID;
                     TESTFIELD("User Name");
                   END;

    OnModifyRecord=BEGIN
                     TESTFIELD("User Name");
                   END;

    OnQueryClosePage=BEGIN
                       IF "User Name" <> '' THEN
                         EXIT(ValidateAuthentication);
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Authentication;
                                 ESP=Autenticaci¢n;
                                 DEA=Authentifizierung] }
      { 21      ;2   ;Action    ;
                      CaptionML=[ENU=&ACS Setup;
                                 ESP=Configuraci¢n &ACS;
                                 DEA=&ACS-Einrichtung];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ServiceSetup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EditACSStatus;
                               END;
                                }
      { 24      ;2   ;Action    ;
                      CaptionML=[ENU=Change Microsoft Dynamics NAV &Password;
                                 ESP=Cambiar &contrase§a de Microsoft Dynamics NAV;
                                 DEA=Microsoft Dynamics NAV-&Kennwort Ñndern];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EncryptionKeys;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EditNavPassword;
                               END;
                                }
      { 20      ;2   ;Action    ;
                      CaptionML=[ENU=Change &Web Service Key;
                                 ESP=Cambiar clave de servicio &Web;
                                 DEA=&WebdienstschlÅssel Ñndern];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ServiceCode;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EditWebServiceID;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           ESP=General;
                           DEA=Allgemein];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=User Security ID;
                           ESP=Id. de seguridad de usuario;
                           DEA=Benutzersicherheitskennung];
                SourceExpr="User Security ID";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="User Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateUserName;
                           END;
                            }

    { 5   ;2   ;Field     ;
                SourceExpr="Full Name" }

    { 8   ;2   ;Field     ;
                SourceExpr="License Type" }

    { 6   ;2   ;Field     ;
                SourceExpr=State;
                Importance=Promoted }

    { 13  ;2   ;Field     ;
                SourceExpr="Expiry Date" }

    { 11  ;1   ;Group     ;
                Name=Windows Authentication;
                CaptionML=[ENU=Windows Authentication;
                           ESP=Autenticaci¢n Windows;
                           DEA=Windows-Authentifizierung];
                Visible=NOT DeployedToAzure;
                GroupType=Group }

    { 12  ;2   ;Field     ;
                SourceExpr="Windows Security ID";
                Visible=FALSE }

    { 7   ;2   ;Field     ;
                Name=Windows User Name;
                CaptionML=[ENU=Windows User Name;
                           ESP=Nombre de usuario Windows;
                           DEA=Windows-Benutzername];
                SourceExpr=WindowsUserName;
                Importance=Promoted;
                OnValidate=VAR
                             UserSID@1000 : Text;
                           BEGIN
                             IF WindowsUserName = '' THEN BEGIN
                               "Windows Security ID" := '';
                             END ELSE BEGIN
                               UserSID := SID(WindowsUserName);
                               WindowsUserName := IdentityManagement.UserName(UserSID);
                               IF WindowsUserName <> '' THEN BEGIN
                                 "Windows Security ID" := UserSID;
                                 ValidateSid;
                                 SetUserName;
                               END ELSE BEGIN
                                 ERROR(Text001,WindowsUserName);
                               END
                             END;
                           END;

                OnAssistEdit=VAR
                               DSOP@1000 : DotNet "'Microsoft.Dynamics.Nav.Management.DSObjectPickerWrapper, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Management.DSObjectPicker.DSObjectPickerWrapper" RUNONCLIENT;
                               result@1001 : Text;
                             BEGIN
                               DSOP := DSOP.DSObjectPickerWrapper;
                               result := DSOP.InvokeDialogAndReturnSid;
                               IF result <> '' THEN BEGIN
                                 "Windows Security ID" := result;
                                 ValidateSid;
                                 WindowsUserName := IdentityManagement.UserName("Windows Security ID");
                                 SetUserName;
                               END;
                             END;
                              }

    { 31  ;1   ;Group     ;
                Name=ACS Authentication;
                CaptionML=[ENU=Access Control Service Authentication;
                           ESP=Autenticaci¢n de Access Control Service;
                           DEA=Dienstauthentifizierung fÅr Zugriffssteuerung];
                GroupType=Group }

    { 22  ;2   ;Field     ;
                DrillDown=No;
                AssistEdit=Yes;
                CaptionML=[ENU=ACS Access Status;
                           ESP=Estado acceso ACS;
                           DEA=ACS-Zugriffsstatus];
                SourceExpr=ACSStatus;
                Importance=Promoted;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               EditACSStatus;
                             END;
                              }

    { 15  ;1   ;Group     ;
                Name=NAV Password Authentication;
                CaptionML=[ENU=Microsoft Dynamics NAV Password Authentication;
                           ESP=Autenticaci¢n de contrase§a de Microsoft Dynamics NAV;
                           DEA=Microsoft Dynamics NAV-Kennwortauthentifizierung];
                GroupType=Group }

    { 25  ;2   ;Field     ;
                ExtendedDatatype=Masked;
                AssistEdit=Yes;
                CaptionML=[ENU=Password;
                           ESP=Contrase§a;
                           DEA=Kennwort];
                SourceExpr=Password;
                Importance=Standard;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               EditNavPassword;
                             END;
                              }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=User must change password at next login;
                           ESP=El usuario debe cambiar la contrase§a en el pr¢ximo inicio de sesi¢n;
                           DEA=Der Benutzer muss bei der nÑchsten Anmeldung das Kennwort Ñndern.];
                SourceExpr="Change Password" }

    { 19  ;1   ;Group     ;
                Name=Web Service Access;
                CaptionML=[ENU=Web Service Access;
                           ESP=Acceso servicio web;
                           DEA=Webdienstzugriff];
                GroupType=Group }

    { 23  ;2   ;Field     ;
                AssistEdit=Yes;
                CaptionML=[ENU=Web Service Access Key;
                           ESP=Clave acceso servicio web;
                           DEA=Webdienst-ZugriffsschlÅssel];
                SourceExpr=WebServiceID;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               EditWebServiceID;
                             END;
                              }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Web Service Expiry Date;
                           ESP=Fecha expiraci¢n servicio web;
                           DEA=Webdienst-Ablaufdatum];
                SourceExpr=WebServiceExpiryDate;
                Importance=Promoted;
                Editable=FALSE }

    { 14  ;1   ;Part      ;
                Name=Permissions;
                CaptionML=[ENU=User Permission Sets;
                           ESP=Conjuntos de permisos de usuario;
                           DEA=BenutzerzugriffsrechtsÑtze];
                SubPageLink=User Security ID=FIELD(User Security ID);
                PagePartID=Page9801;
                PartType=Page }

    { 16  ;    ;Container ;
                ContainerType=FactBoxArea }

    { 17  ;1   ;Part      ;
                PartType=System;
                SystemPartID=Notes }

    { 18  ;1   ;Part      ;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      UserSecID@1007 : Record 2000000120;
      IdentityManagement@1011 : Codeunit 9801;
      WindowsUserName@1000 : Text[208];
      Text001@1003 : TextConst 'ENU=The account %1 is not a valid Windows account.;ESP=La cuenta %1 no es una cuenta Windows v†lida.;DEA=Das Konto ''%1'' ist kein gÅltiges Windows-Konto.';
      Text002@1002 : TextConst 'ENU=The account %1 already exists.;ESP=La cuenta %1 ya existe.;DEA=Das Konto ''%1'' ist bereits vorhanden.';
      Text003@1001 : TextConst 'ENU=The account %1 is not allowed.;ESP=La cuenta %1 no se permite.;DEA=Das Konto ''%1'' ist unzulÑssig.';
      Password@1006 : Text[80];
      ACSStatus@1008 : 'Disabled,Pending,Registered,Unknown';
      WebServiceID@1009 : Text[80];
      Confirm001Qst@1010 : TextConst 'ENU=The current Web Service Access Key will not be valid after editing. All client using it needs to be updated. Do you want to continue?;ESP=La clave de acceso al servicio web dejar† de ser v†lida despuÇs de la modificaci¢n. Se deber†n actualizar todos los clientes que la usan. ®Desea continuar?;DEA=Der aktuelle Webdienst-ZugriffsschlÅssel ist nach der Bearbeitung nicht gÅltig. Alle Clients, die den SchlÅssel verwenden, mÅssen aktualisiert werden. Mîchten Sie fortfahren?';
      WebServiceExpiryDate@1012 : DateTime;
      Confirm002Qst@1013 : TextConst 'ENU=You have not completed all necessary fields for the Credential Type this client is currently using. The user will not be able to log in unless you provide a value in the %1 field. Are you sure that you want to close the page?;ESP=No ha rellenado todos los campos necesarios para el tipo de credencial que este cliente est† usando actualmente. El usuario no podr† iniciar sesi¢n a menos que proporcione un valor en el campo %1. ®Est†s seguro de que desea cerrar la p†gina?;DEA=Sie haben nicht alle erforderlichen Felder fÅr den Anmeldeinformationstyp ausgefÅllt, den dieser Client derzeit verwendet. Der Benutzer kann sich erst anmelden, wenn Sie einen Wert im Feld %1 angeben. Mîchten Sie diese Seite wirklich schlie·en?';
      DeployedToAzure@1014 : Boolean INDATASET;
      Confirm003Qst@1005 : TextConst 'ENU=The user will not be able to log in unless you change the state to Enabled. Are you sure that you want to close the page?;ESP=El usuario no podr† iniciar sesi¢n a menos que cambie el estado a Activado. ®Est† seguro de que desea cerrar la p†gina?;DEA=Der Benutzer kann sich erst anmelden, wenn Sie den Status zu ''Aktiviert'' Ñndern. Mîchten Sie die Seite wirklich schlie·en?';

    PROCEDURE ValidateSid@1();
    VAR
      User@1000 : Record 2000000120;
    BEGIN
      IF "Windows Security ID" = '' THEN
        ERROR(Text001,"User Name");

      IF ("Windows Security ID" = 'S-1-1-0') OR ("Windows Security ID" = 'S-1-5-7') THEN
        ERROR(Text003,"User Name");

      User.SETCURRENTKEY("Windows Security ID");
      User.SETFILTER("Windows Security ID","Windows Security ID");
      User.SETFILTER("User Security ID",'<>%1',"User Security ID");
      IF User.FINDFIRST THEN
        ERROR(Text002,WindowsUserName);
    END;

    PROCEDURE ValidateAuthentication@7() : Boolean;
    VAR
      ValidationField@1000 : Text;
    BEGIN
      IF IdentityManagement.IsWindowsAuthentication AND ("Windows Security ID" = '') THEN
        ValidationField := 'Windows User Name';

      IF IdentityManagement.IsUserNamePasswordAuthentication AND (Password = '') THEN
        ValidationField := 'Password';

      IF IdentityManagement.IsAccessControlServiceAuthentication AND (ACSStatus = 0) THEN
        ValidationField := 'ACSStatus';

      IF ValidationField <> '' THEN
        EXIT(CONFIRM(Confirm002Qst,FALSE,ValidationField));

      IF State <> State::Enabled THEN
        EXIT(CONFIRM(Confirm003Qst,FALSE));

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ValidateUserName@3();
    VAR
      UserMgt@1000 : Codeunit 418;
    BEGIN
      UserMgt.ValidateUserName(Rec,xRec,WindowsUserName);
      CurrPage.UPDATE;
    END;

    PROCEDURE EditWebServiceID@6();
    VAR
      SetWebServiceAccessKey@1000 : Page 9812;
    BEGIN
      TESTFIELD("User Name");

      IF CONFIRM(Confirm001Qst) THEN BEGIN
        UserSecID.SETCURRENTKEY("User Security ID");
        UserSecID.SETRANGE("User Security ID","User Security ID","User Security ID");
        SetWebServiceAccessKey.SETRECORD(UserSecID);
        SetWebServiceAccessKey.SETTABLEVIEW(UserSecID);
        IF SetWebServiceAccessKey.RUNMODAL = ACTION::OK THEN
          CurrPage.UPDATE;
      END;
    END;

    PROCEDURE EditNavPassword@8();
    VAR
      SetPassword@1000 : Page 9810;
    BEGIN
      TESTFIELD("User Name");

      CurrPage.SAVERECORD;
      COMMIT;

      UserSecID.SETCURRENTKEY("User Security ID");
      UserSecID.SETRANGE("User Security ID","User Security ID","User Security ID");
      SetPassword.SETRECORD(UserSecID);
      SetPassword.SETTABLEVIEW(UserSecID);
      IF SetPassword.RUNMODAL = ACTION::OK THEN
        CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE EditACSStatus@9();
    VAR
      UserACSSetup@1000 : Page 9811;
    BEGIN
      TESTFIELD("User Name");

      UserSecID.SETCURRENTKEY("User Security ID");
      UserSecID.SETRANGE("User Security ID","User Security ID","User Security ID");
      UserACSSetup.SETRECORD(UserSecID);
      UserACSSetup.SETTABLEVIEW(UserSecID);
      IF UserACSSetup.RUNMODAL = ACTION::OK THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetUserName@4();
    BEGIN
      "User Name" := WindowsUserName;
      ValidateUserName;
    END;

    BEGIN
    END.
  }
}

