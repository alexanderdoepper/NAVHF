OBJECT Page 9800 Users
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Users;
               ESP=Usuarios;
               DEA=Benutzer];
    SourceTable=Table2000000120;
    DelayedInsert=Yes;
    PageType=List;
    CardPageID=User Card;
    OnAfterGetRecord=BEGIN
                       WindowsUserName := IdentityManagement.UserName("Windows Security ID");
                     END;

    OnNewRecord=BEGIN
                  "User Security ID" := CREATEGUID;
                  WindowsUserName := '';
                END;

    OnInsertRecord=BEGIN
                     IF "User Name" = '' THEN
                       ERROR(Text004,FIELDCAPTION("User Name"));
                   END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 9       ;1   ;ActionGroup;
                      Name=AccessControlGroup;
                      CaptionML=[ENU=&Access Control;
                                 ESP=Control de &acceso;
                                 DEA=&Zugriffssteuerung] }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                SourceExpr="User Security ID";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                Name=User Name;
                CaptionML=[ENU=User Name;
                           ESP=Nombre usuario;
                           DEA=Benutzername];
                SourceExpr="User Name";
                OnValidate=BEGIN
                             ValidateUserName;
                           END;
                            }

    { 5   ;2   ;Field     ;
                Name=Full Name;
                CaptionML=[ENU=Full Name;
                           ESP=Nombre completo;
                           DEA=VollstÑndiger Name];
                SourceExpr="Full Name" }

    { 7   ;2   ;Field     ;
                SourceExpr="Windows Security ID";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                Name=Windows User Name;
                CaptionML=[ENU=Windows User Name;
                           ESP=Nombre de usuario Windows;
                           DEA=Windows-Benutzername];
                SourceExpr=WindowsUserName;
                OnValidate=VAR
                             UserSID@1000 : Text;
                           BEGIN
                             IF WindowsUserName = '' THEN BEGIN
                               "Windows Security ID" := '';
                             END ELSE BEGIN
                               UserSID := SID(WindowsUserName);
                               WindowsUserName := IdentityManagement.UserName(UserSID);
                               IF WindowsUserName <> '' THEN BEGIN
                                 "Windows Security ID" := UserSID;
                                 ValidateSid;
                                 SetUserName;
                               END ELSE BEGIN
                                 ERROR(Text001,WindowsUserName);
                               END
                             END;
                           END;

                OnAssistEdit=VAR
                               DSOP@1000 : DotNet "'Microsoft.Dynamics.Nav.Management.DSObjectPickerWrapper, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Management.DSObjectPicker.DSObjectPickerWrapper" RUNONCLIENT;
                               result@1001 : Text;
                             BEGIN
                               DSOP := DSOP.DSObjectPickerWrapper;
                               result := DSOP.InvokeDialogAndReturnSid;
                               IF result <> '' THEN BEGIN
                                 "Windows Security ID" := result;
                                 ValidateSid;
                                 WindowsUserName := IdentityManagement.UserName("Windows Security ID");
                                 SetUserName;
                               END;
                             END;
                              }

    { 14  ;2   ;Field     ;
                Name=License Type;
                CaptionML=[ENU=License Type;
                           ESP=Tipo de licencia;
                           DEA=Lizenztyp];
                SourceExpr="License Type" }

    { 8   ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 11  ;1   ;Part      ;
                PartType=System;
                SystemPartID=Notes }

    { 12  ;1   ;Part      ;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      IdentityManagement@1004 : Codeunit 9801;
      WindowsUserName@1000 : Text[208];
      Text001@1003 : TextConst 'ENU=The account %1 is not a valid Windows account.;ESP=La cuenta %1 no es una cuenta Windows v†lida.;DEA=Das Konto ''%1'' ist kein gÅltiges Windows-Konto.';
      Text002@1002 : TextConst 'ENU=The account %1 already exists.;ESP=La cuenta %1 ya existe.;DEA=Das Konto ''%1'' ist bereits vorhanden.';
      Text003@1001 : TextConst 'ENU=The account %1 is not allowed.;ESP=La cuenta %1 no se permite.;DEA=Das Konto ''%1'' ist unzulÑssig.';
      Text004@1005 : TextConst 'ENU=%1 cannot be empty.;ESP=%1 no puede estar vac°o.;DEA=%1 darf nicht leer sein.';

    PROCEDURE ValidateSid@1();
    VAR
      User@1000 : Record 2000000120;
    BEGIN
      IF "Windows Security ID" = '' THEN
        ERROR(Text001,"User Name");

      IF ("Windows Security ID" = 'S-1-1-0') OR ("Windows Security ID" = 'S-1-5-7') THEN
        ERROR(Text003,"User Name");

      User.SETCURRENTKEY("Windows Security ID");
      User.SETFILTER("Windows Security ID","Windows Security ID");
      User.SETFILTER("User Security ID",'<>%1',"User Security ID");
      IF User.FINDFIRST THEN
        ERROR(Text002,WindowsUserName);
    END;

    LOCAL PROCEDURE ValidateUserName@3();
    VAR
      UserMgt@1000 : Codeunit 418;
    BEGIN
      UserMgt.ValidateUserName(Rec,xRec,WindowsUserName);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetUserName@4();
    BEGIN
      "User Name" := WindowsUserName;
      ValidateUserName;
    END;

    BEGIN
    END.
  }
}

