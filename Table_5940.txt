OBJECT Table 5940 Service Item
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               ServMgtSetup.GET ;
               IF "No." = '' THEN BEGIN
                 ServMgtSetup.TESTFIELD("Service Item Nos.");
                 NoSeriesMgt.InitSeries(ServMgtSetup."Service Item Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               "Response Time (Hours)" := ServMgtSetup."Default Response Time (Hours)";

               ServLogMgt.ServItemCreated(Rec);
             END;

    OnDelete=VAR
               ResultDescription@1000 : Text[120];
             BEGIN
               MoveEntries.MoveServiceItemLedgerEntries(Rec);

               ResultDescription := CheckIfCanBeDeleted;
               IF ResultDescription <> '' THEN
                 ERROR(ResultDescription);

               DeleteServItemComponents;

               ServCommentLine.RESET;
               ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Item");
               ServCommentLine.SETRANGE("Table Subtype",0);
               ServCommentLine.SETRANGE("No.","No.");
               ServCommentLine.DELETEALL;

               ResSkillMgt.DeleteServItemResSkills("No.");
               ServLogMgt.ServItemDeleted("No.");

               DimMgt.DeleteDefaultDim(DATABASE::"Service Item","No.");
             END;

    OnRename=BEGIN
               IF "No." <> xRec."No." THEN BEGIN
                 ServLogMgt.ServItemNoChange(Rec,xRec);
                 ServContractLine.RESET;
                 ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
                 ServContractLine.SETRANGE("Service Item No.",xRec."No.");
                 ServContractLine.SETRANGE("Contract Type",ServContractLine."Contract Type"::Contract);
                 IF ServContractLine.FIND('-') THEN
                   REPEAT
                     ContractChangeLog.LogContractChange(
                       ServContractLine."Contract No.",1,
                       ServContractLine.FIELDCAPTION("Service Item No."),3,
                       xRec."No.","No.","No.",0);
                   UNTIL ServContractLine.NEXT = 0;
               END;
             END;

    CaptionML=[ENU=Service Item;
               ESP=Producto servicio;
               DEA=Serviceartikel];
    LookupPageID=Page5981;
    DrillDownPageID=Page5981;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ServMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServMgtSetup."Service Item Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=N§;
                                                              DEA=Nr.] }
    { 2   ;   ;Serial No.          ;Code20        ;OnValidate=BEGIN
                                                                IF "Serial No." <> xRec."Serial No." THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Serial No."));

                                                                IF "Serial No." <> '' THEN BEGIN
                                                                  ServItem.RESET;
                                                                  ServItem.SETCURRENTKEY("Item No.","Serial No.");
                                                                  ServItem.SETRANGE("Item No.","Item No.");
                                                                  ServItem.SETRANGE("Serial No.","Serial No.");
                                                                  ServItem.SETFILTER("No.",'<>%1',"No.");
                                                                  IF ServItem.FINDFIRST THEN BEGIN
                                                                    IF "Item No." <> '' THEN
                                                                      ERROR(
                                                                        Text003,
                                                                        FIELDCAPTION("Serial No."),"Serial No.",TABLECAPTION,ServItem."No.");
                                                                    MESSAGE(
                                                                      Text003,
                                                                      FIELDCAPTION("Serial No."),"Serial No.",TABLECAPTION,ServItem."No.")
                                                                  END;
                                                                END;

                                                                IF "Serial No." <> xRec."Serial No." THEN
                                                                  ServLogMgt.ServItemSerialNoChange(Rec,xRec);
                                                              END;

                                                   CaptionML=[ENU=Serial No.;
                                                              ESP=N§ serie;
                                                              DEA=Seriennr.] }
    { 3   ;   ;Service Item Group Code;Code10     ;TableRelation="Service Item Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Service Item Group Code" = "Service Item Group Code" THEN BEGIN
                                                                  IF NOT CancelResSkillAssignment THEN
                                                                    ResSkillMgt.RevalidateRelation(
                                                                      ResSkill.Type::"Service Item",
                                                                      "No.",
                                                                      ResSkill.Type::"Service Item Group",
                                                                      "Service Item Group Code")
                                                                END ELSE BEGIN
                                                                  IF NOT CancelResSkillAssignment THEN BEGIN
                                                                    IF CancelResSkillChanges THEN
                                                                      ResSkillMgt.SkipValidationDialogs;

                                                                    IF NOT ResSkillMgt.ChangeRelationWithGroup(
                                                                         ResSkill.Type::"Service Item",
                                                                         "No.",
                                                                         ResSkill.Type::"Service Item Group",
                                                                         "Service Item Group Code",
                                                                         xRec."Service Item Group Code")
                                                                    THEN
                                                                      ERROR('');

                                                                    IF CancelResSkillChanges THEN BEGIN
                                                                      ResSkillMgt.DropGlobals;
                                                                      CancelResSkillChanges := FALSE;
                                                                    END ELSE
                                                                      CancelResSkillChanges := TRUE;
                                                                  END;

                                                                  IF "Service Item Group Code" <> '' THEN BEGIN
                                                                    ServItemGr.GET("Service Item Group Code");
                                                                    "Default Contract Discount %" := ServItemGr."Default Contract Discount %";
                                                                    IF "Service Price Group Code" = '' THEN
                                                                      "Service Price Group Code" := ServItemGr."Default Serv. Price Group Code";
                                                                    IF (xRec."Service Item Group Code" <> "Service Item Group Code") AND
                                                                       (ServItemGr."Default Response Time (Hours)" <> 0)
                                                                    THEN
                                                                      "Response Time (Hours)" := ServItemGr."Default Response Time (Hours)";
                                                                  END;
                                                                END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Service Item Group Code;
                                                              ESP=C¢d. grupo prod. servicio;
                                                              DEA=Serviceartikelgruppencode] }
    { 4   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n;
                                                              DEA=Beschreibung] }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ESP=Descripci¢n 2;
                                                              DEA=Beschreibung 2] }
    { 6   ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF Status <> xRec.Status THEN BEGIN
                                                                  IF (Status = Status::Installed) AND ("Installation Date" = 0D) THEN
                                                                    "Installation Date" := WORKDATE;
                                                                  ServLogMgt.ServItemStatusChange(Rec,xRec);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              ESP=Estado;
                                                              DEA=Status];
                                                   OptionCaptionML=[ENU=" ,Own Service Item,Installed,Temporarily Installed,Defective";
                                                                    ESP=" ,Prod. serv. propio,Instalado,Instalado temporalmente,Defectuoso";
                                                                    DEA=" ,Eigener Serviceartikel,Installiert,Temporr installiert,Defekt"];
                                                   OptionString=[ ,Own Service Item,Installed,Temporarily Installed,Defective] }
    { 7   ;   ;Priority            ;Option        ;CaptionML=[ENU=Priority;
                                                              ESP=Prioridad;
                                                              DEA=Prioritt];
                                                   OptionCaptionML=[ENU=Low,Medium,High;
                                                                    ESP=Baja,Media,Alta;
                                                                    DEA=Niedrig,Normal,Hoch];
                                                   OptionString=Low,Medium,High }
    { 8   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF "Customer No." <> xRec."Customer No." THEN BEGIN
                                                                  IF CheckifActiveServContLineExist THEN
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Customer No."),"Customer No.",TABLECAPTION,"No.");
                                                                  ErrMessageIfServItemLinesExist(FIELDCAPTION("Customer No."));
                                                                  IF ServLedgEntryExist THEN
                                                                    IF NOT CONFIRM(
                                                                         Text017,
                                                                         FALSE,TABLECAPTION,FIELDCAPTION("Customer No."))
                                                                    THEN BEGIN
                                                                      "Customer No." := xRec."Customer No.";
                                                                      EXIT;
                                                                    END;
                                                                  "Ship-to Code" := '';
                                                                  IF ("Customer No." <> '') AND
                                                                     (xRec."Customer No." = '')
                                                                  THEN
                                                                    Status := Status::Installed;
                                                                  ServLogMgt.ServItemCustChange(Rec,xRec);
                                                                  ServLogMgt.ServItemShipToCodeChange(Rec,xRec);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=Yes;
                                                   CaptionML=[ENU=Customer No.;
                                                              ESP=N§ cliente;
                                                              DEA=Debitorennr.] }
    { 9   ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   OnValidate=BEGIN
                                                                IF "Ship-to Code" <> xRec."Ship-to Code" THEN BEGIN
                                                                  IF CheckifActiveServContLineExist THEN
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Ship-to Code"),"Ship-to Code",TABLECAPTION,"No.");
                                                                  ErrMessageIfServItemLinesExist(FIELDCAPTION("Ship-to Code"));
                                                                  IF ServLedgEntryExist THEN
                                                                    IF NOT CONFIRM(
                                                                         Text017,
                                                                         FALSE,TABLECAPTION,FIELDCAPTION("Customer No."))
                                                                    THEN BEGIN
                                                                      "Ship-to Code" := xRec."Ship-to Code";
                                                                      EXIT;
                                                                    END;
                                                                  ServLogMgt.ServItemShipToCodeChange(Rec,xRec);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ship-to Code;
                                                              ESP=C¢d. direcci¢n env¡o cliente;
                                                              DEA=Lief. an Code] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." <> xRec."Item No." THEN BEGIN
                                                                  IF "Item No." <> '' THEN BEGIN
                                                                    CALCFIELDS("Service Item Components");
                                                                    IF "Service Item Components" THEN BEGIN
                                                                      IF NOT CONFIRM(
                                                                           Text005 +
                                                                           Text006,FALSE,
                                                                           FIELDCAPTION("Item No."),FIELDCAPTION("Service Item Components"))
                                                                      THEN BEGIN
                                                                        "Item No." := xRec."Item No.";
                                                                        EXIT;
                                                                      END;
                                                                    END;
                                                                  END;
                                                                  IF NOT CancelResSkillAssignment THEN BEGIN
                                                                    IF CancelResSkillChanges THEN
                                                                      ResSkillMgt.SkipValidationDialogs;
                                                                    IF NOT ResSkillMgt.ChangeRelationWithItem(
                                                                         ResSkill.Type::"Service Item",
                                                                         "No.",
                                                                         ResSkill.Type::Item,
                                                                         "Item No.",
                                                                         xRec."Item No.",
                                                                         xRec."Service Item Group Code")
                                                                    THEN
                                                                      ERROR('');
                                                                    IF CancelResSkillChanges THEN BEGIN
                                                                      ResSkillMgt.DropGlobals;
                                                                      CancelResSkillChanges := FALSE;
                                                                    END ELSE
                                                                      CancelResSkillChanges := TRUE;
                                                                  END;
                                                                  IF "Item No." <> '' THEN BEGIN
                                                                    Item.GET("Item No.");
                                                                    VALIDATE("Service Item Group Code",Item."Service Item Group");
                                                                    VALIDATE("Serial No.");
                                                                    VALIDATE("Sales Unit Cost",Item."Unit Cost");
                                                                    VALIDATE("Sales Unit Price",Item."Unit Price");
                                                                    "Variant Code" := '';
                                                                    "Unit of Measure Code" := Item."Base Unit of Measure";
                                                                    IF Description = '' THEN
                                                                      VALIDATE(Description,Item.Description);
                                                                    IF "Service Item Components" THEN BEGIN
                                                                      DeleteServItemComponents;
                                                                      CALCFIELDS("Service Item Components");
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    "Serial No." := '';
                                                                    VALIDATE("Sales Unit Price",0);
                                                                    VALIDATE("Sales Unit Cost",0);
                                                                    "Variant Code" := '';
                                                                    "Service Item Group Code" := '';
                                                                    "Unit of Measure Code" := '';
                                                                  END;
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Item No."));
                                                                END ELSE
                                                                  IF NOT CancelResSkillAssignment THEN
                                                                    ResSkillMgt.RevalidateRelation(
                                                                      ResSkill.Type::"Service Item",
                                                                      "No.",
                                                                      ResSkill.Type::Item,
                                                                      "Item No.");

                                                                ServLogMgt.ServItemItemNoChange(Rec,xRec);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ESP=N§ producto;
                                                              DEA=Artikelnr.] }
    { 11  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Item No.=FILTER(<>'')) "Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida;
                                                              DEA=Einheitencode] }
    { 12  ;   ;Location of Service Item;Text30    ;CaptionML=[ENU=Location of Service Item;
                                                              ESP=Ubicaci¢n del prod. serv.;
                                                              DEA=Standort] }
    { 13  ;   ;Sales Unit Price    ;Decimal       ;OnValidate=BEGIN
                                                                ServMgtSetup.GET;
                                                                Currency.InitRoundingPrecision;
                                                                IF (ServMgtSetup."Contract Value Calc. Method" =
                                                                    ServMgtSetup."Contract Value Calc. Method"::"Based on Unit Price") AND
                                                                   ("Sales Unit Price" <> xRec."Sales Unit Price")
                                                                THEN
                                                                  "Default Contract Value" :=
                                                                    ROUND("Sales Unit Price" * ServMgtSetup."Contract Value %" / 100,
                                                                      Currency."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Sales Unit Price;
                                                              ESP=Precio unit. venta;
                                                              DEA=VK-Preis];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 14  ;   ;Sales Unit Cost     ;Decimal       ;OnValidate=BEGIN
                                                                ServMgtSetup.GET;
                                                                Currency.InitRoundingPrecision;
                                                                "Default Contract Cost" :=
                                                                  ROUND("Sales Unit Cost" * ServMgtSetup."Contract Value %" / 100,
                                                                    Currency."Unit-Amount Rounding Precision");
                                                                IF (ServMgtSetup."Contract Value Calc. Method" =
                                                                    ServMgtSetup."Contract Value Calc. Method"::"Based on Unit Cost") AND
                                                                   ("Sales Unit Cost" <> xRec."Sales Unit Cost")
                                                                THEN
                                                                  "Default Contract Value" := "Default Contract Cost";
                                                              END;

                                                   CaptionML=[ENU=Sales Unit Cost;
                                                              ESP=Coste unit. venta;
                                                              DEA=Einstandspreis];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 15  ;   ;Warranty Starting Date (Labor);Date;OnValidate=BEGIN
                                                                IF "Warranty Starting Date (Labor)" <> xRec."Warranty Starting Date (Labor)" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Starting Date (Labor)"));

                                                                ServMgtSetup.GET;
                                                                ServMgtSetup.TESTFIELD("Default Warranty Duration");
                                                                IF "Warranty Starting Date (Labor)" <> xRec."Warranty Starting Date (Labor)" THEN
                                                                  IF "Warranty Starting Date (Labor)" <> 0D THEN
                                                                    VALIDATE("Warranty Ending Date (Labor)",CALCDATE(ServMgtSetup."Default Warranty Duration","Warranty Starting Date (Labor)"))
                                                                  ELSE
                                                                    "Warranty Ending Date (Labor)" := 0D;

                                                                IF "Warranty Starting Date (Labor)" <> 0D THEN
                                                                  IF "Warranty Starting Date (Parts)" = 0D THEN
                                                                    VALIDATE("Warranty Starting Date (Parts)","Warranty Starting Date (Labor)");
                                                              END;

                                                   CaptionML=[ENU=Warranty Starting Date (Labor);
                                                              ESP=Fecha inic. garant¡a (M. obra);
                                                              DEA=Garantiebeginn (Arbeit)] }
    { 16  ;   ;Warranty Ending Date (Labor);Date  ;OnValidate=BEGIN
                                                                IF "Warranty Ending Date (Labor)" <> xRec."Warranty Ending Date (Labor)" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Ending Date (Labor)"));

                                                                IF "Warranty Ending Date (Labor)" < "Warranty Starting Date (Labor)" THEN
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Warranty Starting Date (Labor)"),FIELDCAPTION("Warranty Ending Date (Labor)"));

                                                                ServMgtSetup.GET;
                                                                IF "Warranty % (Labor)" = 0 THEN
                                                                  "Warranty % (Labor)" := ServMgtSetup."Warranty Disc. % (Labor)";
                                                              END;

                                                   CaptionML=[ENU=Warranty Ending Date (Labor);
                                                              ESP=Fecha fin garant¡a (Mano obra);
                                                              DEA=Garantieende (Arbeit)] }
    { 17  ;   ;Warranty Starting Date (Parts);Date;OnValidate=VAR
                                                                ItemTrackingCode@1000 : Record 6502;
                                                              BEGIN
                                                                IF "Warranty Starting Date (Parts)" <> xRec."Warranty Starting Date (Parts)" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Starting Date (Parts)"));

                                                                IF "Warranty Starting Date (Parts)" <> xRec."Warranty Starting Date (Parts)" THEN
                                                                  IF "Warranty Starting Date (Parts)" <> 0D THEN BEGIN
                                                                    IF Item.GET("Item No.") AND (Item."Item Tracking Code" <> '') AND
                                                                       ItemTrackingCode.GET(Item."Item Tracking Code") AND
                                                                       (FORMAT(ItemTrackingCode."Warranty Date Formula") <> '')
                                                                    THEN
                                                                      VALIDATE(
                                                                        "Warranty Ending Date (Parts)",
                                                                        CALCDATE(ItemTrackingCode."Warranty Date Formula",
                                                                          "Warranty Starting Date (Parts)"))
                                                                    ELSE BEGIN
                                                                      ServMgtSetup.GET;
                                                                      ServMgtSetup.TESTFIELD("Default Warranty Duration");
                                                                      VALIDATE(
                                                                        "Warranty Ending Date (Parts)",
                                                                        CALCDATE(ServMgtSetup."Default Warranty Duration",
                                                                          "Warranty Starting Date (Parts)"));
                                                                    END;
                                                                  END ELSE
                                                                    "Warranty Ending Date (Parts)" := 0D;

                                                                IF "Warranty Starting Date (Parts)" <> 0D THEN
                                                                  IF "Warranty Starting Date (Labor)" = 0D THEN
                                                                    VALIDATE("Warranty Starting Date (Labor)","Warranty Starting Date (Parts)");
                                                              END;

                                                   CaptionML=[ENU=Warranty Starting Date (Parts);
                                                              ESP=Fecha inicio garant¡a (Comp.);
                                                              DEA=Garantiebeginn (Teile)] }
    { 18  ;   ;Warranty Ending Date (Parts);Date  ;OnValidate=BEGIN
                                                                IF "Warranty Ending Date (Parts)" < "Warranty Starting Date (Parts)" THEN
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Warranty Starting Date (Parts)"),FIELDCAPTION("Warranty Ending Date (Parts)"));

                                                                IF "Warranty Ending Date (Parts)" <> xRec."Warranty Ending Date (Parts)" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Ending Date (Parts)"));

                                                                ServMgtSetup.GET;
                                                                IF "Warranty % (Parts)" = 0 THEN
                                                                  "Warranty % (Parts)" := ServMgtSetup."Warranty Disc. % (Parts)";
                                                              END;

                                                   CaptionML=[ENU=Warranty Ending Date (Parts);
                                                              ESP=Fecha fin garant¡a (Comp.);
                                                              DEA=Garantieende (Teile)] }
    { 19  ;   ;Warranty % (Parts)  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Warranty % (Parts)" <> xRec."Warranty % (Parts)" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty % (Parts)"));
                                                              END;

                                                   CaptionML=[ENU=Warranty % (Parts);
                                                              ESP=% Garant¡a (Componentes);
                                                              DEA=Garantierabatt % (Teile)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 20  ;   ;Warranty % (Labor)  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Warranty % (Labor)" <> xRec."Warranty % (Labor)" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty % (Labor)"));
                                                              END;

                                                   CaptionML=[ENU=Warranty % (Labor);
                                                              ESP=% Garant¡a (Mano de obra);
                                                              DEA=Garantierabatt % (Arbeit)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 21  ;   ;Response Time (Hours);Decimal      ;CaptionML=[ENU=Response Time (Hours);
                                                              ESP=Tiempo respuesta (Horas);
                                                              DEA=Reaktionszeit (Std.)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 22  ;   ;Installation Date   ;Date          ;CaptionML=[ENU=Installation Date;
                                                              ESP=Fecha instalaci¢n;
                                                              DEA=Installationsdatum] }
    { 23  ;   ;Sales Date          ;Date          ;OnValidate=BEGIN
                                                                IF "Sales Date" > 0D THEN BEGIN
                                                                  IF "Warranty Starting Date (Parts)" = 0D THEN
                                                                    VALIDATE("Warranty Starting Date (Parts)","Sales Date");
                                                                  IF "Warranty Starting Date (Labor)" = 0D THEN
                                                                    VALIDATE("Warranty Starting Date (Labor)","Sales Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sales Date;
                                                              ESP=Fecha venta;
                                                              DEA=Verkaufsdatum] }
    { 24  ;   ;Last Service Date   ;Date          ;CaptionML=[ENU=Last Service Date;
                                                              ESP=élt. fecha servicio;
                                                              DEA=Letzter Service am] }
    { 25  ;   ;Default Contract Value;Decimal     ;CaptionML=[ENU=Default Contract Value;
                                                              ESP=Valor contrato genrico;
                                                              DEA=Standardvertragswert];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 26  ;   ;Default Contract Discount %;Decimal;CaptionML=[ENU=Default Contract Discount %;
                                                              ESP=% Descuento contrato genr.;
                                                              DEA=Vorg.-Vertragsrabatt %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 28  ;   ;No. of Active Contracts;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Contract Line" WHERE (Service Item No.=FIELD(No.),
                                                                                                    Contract Status=FILTER(<>Cancelled)));
                                                   CaptionML=[ENU=No. of Active Contracts;
                                                              ESP=N§ de contratos activos;
                                                              DEA=Anz. aktive Vertrge] }
    { 33  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ESP=N§ proveedor;
                                                              DEA=Kreditorennr.] }
    { 34  ;   ;Vendor Item No.     ;Code20        ;CaptionML=[ENU=Vendor Item No.;
                                                              ESP=C¢d. producto proveedor;
                                                              DEA=Kred.-Artikelnr.] }
    { 47  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESP=Nos. serie;
                                                              DEA=Nummernserie] }
    { 48  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              ESP=Descripci¢n producto;
                                                              DEA=Artikelbeschreibung];
                                                   Editable=No }
    { 49  ;   ;Name                ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Name;
                                                              ESP=Nombre;
                                                              DEA=Name];
                                                   Editable=No }
    { 50  ;   ;Address             ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Address WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Address;
                                                              ESP=Direcci¢n;
                                                              DEA=Adresse];
                                                   Editable=No }
    { 51  ;   ;Address 2           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Address 2" WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Address 2;
                                                              ESP=Direcci¢n 2;
                                                              DEA=Adresse 2];
                                                   Editable=No }
    { 52  ;   ;Post Code           ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Post Code" WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Post Code;
                                                              ESP=C.P.;
                                                              DEA=PLZ-Code];
                                                   Editable=No }
    { 53  ;   ;City                ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.City WHERE (No.=FIELD(Customer No.)));
                                                   TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ESP=Poblaci¢n;
                                                              DEA=Ort];
                                                   Editable=No }
    { 54  ;   ;Contact             ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Contact WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Contact;
                                                              ESP=Contacto;
                                                              DEA=Kontakt];
                                                   Editable=No }
    { 55  ;   ;Phone No.           ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Phone No." WHERE (No.=FIELD(Customer No.)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ESP=N§ telfono;
                                                              DEA=Telefonnr.];
                                                   Editable=No }
    { 56  ;   ;Ship-to Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".Name WHERE (Customer No.=FIELD(Customer No.),
                                                                                                    Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Name;
                                                              ESP=Env¡o a-Nombre;
                                                              DEA=Lief. an Name];
                                                   Editable=No }
    { 57  ;   ;Ship-to Address     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".Address WHERE (Customer No.=FIELD(Customer No.),
                                                                                                       Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Address;
                                                              ESP=Env¡o a-Direcci¢n;
                                                              DEA=Lief. an Adresse];
                                                   Editable=No }
    { 58  ;   ;Ship-to Address 2   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Address 2" WHERE (Customer No.=FIELD(Customer No.),
                                                                                                           Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Address 2;
                                                              ESP=Env¡o a-Direcci¢n 2;
                                                              DEA=Lief. an Adresse 2];
                                                   Editable=No }
    { 59  ;   ;Ship-to Post Code   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Post Code" WHERE (Customer No.=FIELD(Customer No.),
                                                                                                           Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              ESP=Env¡o a-C.P.;
                                                              DEA=Lief. an PLZ-Code];
                                                   Editable=No }
    { 60  ;   ;Ship-to City        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".City WHERE (Customer No.=FIELD(Customer No.),
                                                                                                    Code=FIELD(Ship-to Code)));
                                                   TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Ship-to City;
                                                              ESP=Env¡o a-Poblaci¢n;
                                                              DEA=Lief. an Ort];
                                                   Editable=No }
    { 61  ;   ;Ship-to Contact     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".Contact WHERE (Customer No.=FIELD(Customer No.),
                                                                                                       Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Contact;
                                                              ESP=Env¡o a-Atenci¢n;
                                                              DEA=Lief. an Kontakt];
                                                   Editable=No }
    { 62  ;   ;Ship-to Phone No.   ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Phone No." WHERE (Customer No.=FIELD(Customer No.),
                                                                                                           Code=FIELD(Ship-to Code)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Ship-to Phone No.;
                                                              ESP=Env¡a a-N§ telfono;
                                                              DEA=Lief. an Telefonnr.];
                                                   Editable=No }
    { 63  ;   ;Usage (Cost)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Ledger Entry"."Cost Amount" WHERE (Entry Type=CONST(Usage),
                                                                                                               Service Item No. (Serviced)=FIELD(No.),
                                                                                                               Service Contract No.=FIELD(Contract Filter),
                                                                                                               Service Order No.=FIELD(Service Order Filter),
                                                                                                               Type=FIELD(Type Filter),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Usage (Cost);
                                                              ESP=Consumo (p. coste);
                                                              DEA=Verbrauch (Einst.-Betrag)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 64  ;   ;Usage (Amount)      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Ledger Entry"."Amount (LCY)" WHERE (Entry Type=CONST(Usage),
                                                                                                                Service Item No. (Serviced)=FIELD(No.),
                                                                                                                Service Contract No.=FIELD(Contract Filter),
                                                                                                                Service Order No.=FIELD(Service Order Filter),
                                                                                                                Type=FIELD(Type Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Usage (Amount);
                                                              ESP=Consumo (Importe);
                                                              DEA=Verbrauch (Betrag)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 65  ;   ;Invoiced Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Amount (LCY)" WHERE (Entry Type=CONST(Sale),
                                                                                                                 Moved from Prepaid Acc.=CONST(Yes),
                                                                                                                 Service Item No. (Serviced)=FIELD(No.),
                                                                                                                 Service Contract No.=FIELD(Contract Filter),
                                                                                                                 Service Order No.=FIELD(Service Order Filter),
                                                                                                                 Type=FIELD(Type Filter),
                                                                                                                 Posting Date=FIELD(Date Filter),
                                                                                                                 Open=CONST(No)));
                                                   CaptionML=[ENU=Invoiced Amount;
                                                              ESP=Importe facturado;
                                                              DEA=Fakturierter Betrag];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 66  ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Ledger Entry".Quantity WHERE (Entry Type=CONST(Usage),
                                                                                                          Service Item No. (Serviced)=FIELD(No.),
                                                                                                          Service Contract No.=FIELD(Contract Filter),
                                                                                                          Service Order No.=FIELD(Service Order Filter),
                                                                                                          Type=FIELD(Type Filter),
                                                                                                          Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Total Quantity;
                                                              ESP=Cantidad total;
                                                              DEA=Gesamtmenge];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 67  ;   ;Total Qty. Invoiced ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Charged Qty." WHERE (Entry Type=CONST(Sale),
                                                                                                                 Service Item No. (Serviced)=FIELD(No.),
                                                                                                                 Service Contract No.=FIELD(Contract Filter),
                                                                                                                 Service Order No.=FIELD(Service Order Filter),
                                                                                                                 Type=FIELD(Type Filter),
                                                                                                                 Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Total Qty. Invoiced;
                                                              ESP=Cdad. facturada total;
                                                              DEA=Total fakturiert];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 68  ;   ;Resources Used      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE (Service Item No. (Serviced)=FIELD(No.),
                                                                                                                Entry Type=CONST(Sale),
                                                                                                                Type=CONST(Resource),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Resources Used;
                                                              ESP=Recursos utilizados;
                                                              DEA=Ressourceneinsatz];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 69  ;   ;Parts Used          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE (Service Item No. (Serviced)=FIELD(No.),
                                                                                                                Entry Type=CONST(Sale),
                                                                                                                Type=CONST(Item),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Parts Used;
                                                              ESP=Componentes utilizados;
                                                              DEA=Teileeinsatz];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 70  ;   ;Cost Used           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE (Service Item No. (Serviced)=FIELD(No.),
                                                                                                                Entry Type=CONST(Sale),
                                                                                                                Type=CONST(Service Cost),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Cost Used;
                                                              ESP=Coste utilizado;
                                                              DEA=Kosteneinsatz];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 71  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              ESP=Nombre proveedor;
                                                              DEA=Kreditorenname];
                                                   Editable=No }
    { 72  ;   ;Vendor Item Name    ;Text50        ;CaptionML=[ENU=Vendor Item Name;
                                                              ESP=Nombre prod. proveedor;
                                                              DEA=Kred.-Artikelbeschreibung] }
    { 73  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Comment Line" WHERE (Table Name=CONST(Service Item),
                                                                                                   Table Subtype=CONST(0),
                                                                                                   No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESP=Comentario;
                                                              DEA=Bemerkung];
                                                   Editable=No }
    { 74  ;   ;Service Item Components;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Item Component" WHERE (Parent Service Item No.=FIELD(No.),
                                                                                                     Active=CONST(Yes)));
                                                   CaptionML=[ENU=Service Item Components;
                                                              ESP=Componentes prod. servicio;
                                                              DEA=Serviceartikelkomponenten];
                                                   Editable=No }
    { 75  ;   ;Preferred Resource  ;Code20        ;TableRelation=Resource.No.;
                                                   OnLookup=VAR
                                                              Resource@1001 : Record 156;
                                                              SkilledResourceList@1000 : Page 6023;
                                                            BEGIN
                                                              SkilledResourceList.Initialize(ResSkill.Type::"Service Item","No.",Description);
                                                              SkilledResourceList.LOOKUPMODE(TRUE);
                                                              IF Resource.GET("Preferred Resource") THEN
                                                                SkilledResourceList.SETRECORD(Resource);
                                                              IF SkilledResourceList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                SkilledResourceList.GETRECORD(Resource);
                                                                "Preferred Resource" := Resource."No.";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Preferred Resource;
                                                              ESP=Recurso preferido;
                                                              DEA=Bevorzugte Ressource] }
    { 76  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" <> xRec."Variant Code" THEN
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Variant Code"));
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante;
                                                              DEA=Variantencode] }
    { 77  ;   ;County              ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.County WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=County;
                                                              ESP=Provincia;
                                                              DEA=Bundesregion];
                                                   Editable=No }
    { 78  ;   ;Ship-to County      ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".County WHERE (Customer No.=FIELD(Customer No.),
                                                                                                      Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to County;
                                                              ESP=Env¡o a-Provincia;
                                                              DEA=Lief. an Bundesregion];
                                                   Editable=No }
    { 79  ;   ;Contract Cost       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE (Entry Type=CONST(Sale),
                                                                                                                Service Item No. (Serviced)=FIELD(No.),
                                                                                                                Service Contract No.=FIELD(Contract Filter),
                                                                                                                Service Order No.=FIELD(Service Order Filter),
                                                                                                                Type=CONST(Service Contract),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Contract Cost;
                                                              ESP=Coste contrato;
                                                              DEA=Einstandsbetrag Vertrag] }
    { 81  ;   ;Country/Region Code ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Country/Region Code" WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESP=C¢d. pa¡s/regi¢n;
                                                              DEA=Lnder-/Regionscode];
                                                   Editable=No }
    { 82  ;   ;Ship-to Country/Region Code;Code10 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Country/Region Code" WHERE (Customer No.=FIELD(Customer No.),
                                                                                                                     Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              ESP=Env¡o a-C¢d. pa¡s/regi¢n;
                                                              DEA=Lief. an Lnder-/Regionscode];
                                                   Editable=No }
    { 83  ;   ;Name 2              ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Name 2" WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Name 2;
                                                              ESP=Nombre 2;
                                                              DEA=Name 2];
                                                   Editable=No }
    { 84  ;   ;Ship-to Name 2      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Name 2" WHERE (Customer No.=FIELD(Customer No.),
                                                                                                        Code=FIELD(Ship-to Code)));
                                                   CaptionML=[ENU=Ship-to Name 2;
                                                              ESP=Env¡o a-Nombre 2;
                                                              DEA=Lief. an Name 2];
                                                   Editable=No }
    { 85  ;   ;Service Price Group Code;Code10    ;TableRelation="Service Price Group";
                                                   CaptionML=[ENU=Service Price Group Code;
                                                              ESP=C¢d. grupo precio serv.;
                                                              DEA=Servicepreisgruppencode] }
    { 86  ;   ;Default Contract Cost;Decimal      ;CaptionML=[ENU=Default Contract Cost;
                                                              ESP=Coste contrato genrico;
                                                              DEA=Vorg.-Einst.-Betrag (Vertr.)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 87  ;   ;Prepaid Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Amount (LCY)" WHERE (Entry Type=CONST(Sale),
                                                                                                                 Moved from Prepaid Acc.=CONST(No),
                                                                                                                 Service Item No. (Serviced)=FIELD(No.),
                                                                                                                 Service Contract No.=FIELD(Contract Filter),
                                                                                                                 Service Order No.=FIELD(Service Order Filter),
                                                                                                                 Type=FIELD(Type Filter),
                                                                                                                 Posting Date=FIELD(Date Filter),
                                                                                                                 Open=CONST(No)));
                                                   CaptionML=[ENU=Prepaid Amount;
                                                              ESP=Importe prepago;
                                                              DEA=Vorausbezahlter Betrag];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 88  ;   ;Search Description  ;Code50        ;CaptionML=[ENU=Search Description;
                                                              ESP=Descripci¢n alias;
                                                              DEA=Suchbegriff] }
    { 89  ;   ;Service Contracts   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Contract Line" WHERE (Service Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Service Contracts;
                                                              ESP=Contratos de servicio;
                                                              DEA=Servicevertrge];
                                                   Editable=No }
    { 90  ;   ;Total Qty. Consumed ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry".Quantity WHERE (Entry Type=CONST(Consume),
                                                                                                           Service Item No. (Serviced)=FIELD(No.),
                                                                                                           Service Contract No.=FIELD(Contract Filter),
                                                                                                           Service Order No.=FIELD(Service Order Filter),
                                                                                                           Type=FIELD(Type Filter),
                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Total Qty. Consumed;
                                                              ESP=Total cantidad consumida;
                                                              DEA=Mge. verbraucht gesamt];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 100 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ESP=Filtro fecha;
                                                              DEA=Datumsfilter] }
    { 101 ;   ;Type Filter         ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Type Filter;
                                                              ESP=Filtro tipo;
                                                              DEA=Artenfilter];
                                                   OptionCaptionML=[ENU=" ,Resource,Item,Service Cost,Service Contract,G/L Account";
                                                                    ESP=" ,Recurso,Producto,Coste servicio,Contrato servicio,Cuenta";
                                                                    DEA=" ,Ressource,Artikel,Servicekosten,Servicevertrag,Sachkonto"];
                                                   OptionString=[ ,Resource,Item,Service Cost,Service Contract,G/L Account] }
    { 102 ;   ;Contract Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract));
                                                   CaptionML=[ENU=Contract Filter;
                                                              ESP=Filtro contrato;
                                                              DEA=Vertragsfilter] }
    { 103 ;   ;Service Order Filter;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Header";
                                                   CaptionML=[ENU=Service Order Filter;
                                                              ESP=Filtro pedido servicio;
                                                              DEA=Serviceauftragsfilter] }
    { 104 ;   ;Sales/Serv. Shpt. Document No.;Code20;
                                                   TableRelation="Sales Shipment Line"."Document No.";
                                                   CaptionML=[ENU=Sales/Serv. Shpt. Document No.;
                                                              ESP=N§ documento env¡o ventas/servicio;
                                                              DEA=Verkaufs-/Servicelief. Belegnr.] }
    { 105 ;   ;Sales/Serv. Shpt. Line No.;Integer ;TableRelation="Sales Shipment Line"."Line No." WHERE (Document No.=FIELD(Sales/Serv. Shpt. Document No.));
                                                   CaptionML=[ENU=Sales/Serv. Shpt. Line No.;
                                                              ESP=N§ l¡nea env¡o ventas/servicio;
                                                              DEA=Verkaufs/Servicelief. Zeilennr.] }
    { 106 ;   ;Shipment Type       ;Option        ;CaptionML=[ENU=Shipment Type;
                                                              ESP=Tipo env¡o;
                                                              DEA=Lieferungsart];
                                                   OptionCaptionML=[ENU=Sales,Service;
                                                                    ESP=Ventas,Servicio;
                                                                    DEA=Verkauf,Service];
                                                   OptionString=Sales,Service }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Item No.,Serial No.                      }
    {    ;Customer No.,Ship-to Code,Item No.,Serial No. }
    {    ;Warranty Ending Date (Parts),Customer No.,Ship-to Code }
    {    ;Sales/Serv. Shpt. Document No.,Sales/Serv. Shpt. Line No. }
    {    ;Service Item Group Code                  }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Status,Item No.,Service Contracts }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2,because it is attached to a service order.;ESP=No puede eliminar %1 %2, porque est  relacionado con un ped. servicio.;DEA=Sie knnen %1 %2 nicht lschen, da er in einem Serviceauftrag enthalten ist.';
      Text001@1001 : TextConst 'ENU=You cannot delete %1 %2, because it is used as %3 for %1 %4.;ESP=No puede eliminar %1 %2, porque se utiliza como %3 para %1 %4.;DEA=Sie knnen %1 %2 nicht lschen, da er eine %3 fr %1 %4 ist.';
      Text002@1002 : TextConst 'ENU=You cannot delete %1 %2, because it belongs to one or more contracts.;ESP=No puede eliminar %1 %2, porque pertenece a uno o m s contratos.;DEA=Sie knnen %1 %2 nicht lschen, da er in einem oder mehreren Vertrgen vorhanden ist.';
      Text003@1003 : TextConst 'ENU=%1 %2 already exists in %3 %4.;ESP=%1 %2 existe ya en %3 %4.;DEA=%1 %2 wird bereits fr %3 %4 verwendet.';
      Text004@1004 : TextConst 'ENU=You cannot change %1 %2 because the %3 %4 belongs to one or more contracts.;ESP=No puede modificar %1 %2 porque el %3 %4 pertenece a uno o m s contratos.;DEA=Sie knnen %1 %2 nicht ndern, da der %3 %4 in einem oder mehreren Vertrgen vorhanden ist.';
      Text005@1005 : TextConst 'ENU=Changing the %1 will delete the existing %2 on the %2 list.\\;ESP=Cambiar el %1 eliminar  el actual %2 en la lista %2.\\;DEA=Wenn Sie die %1 ndern, werden vorhandene %2 in den %2 gelscht.\\';
      Text006@1006 : TextConst 'ENU=Do you want to change the %1?;ESP=¨Confirma que desea cambiar el %1?;DEA=Mchten Sie %1 ndern?';
      Text007@1007 : TextConst 'ENU=%1 cannot be later than %2.;ESP=%1 no puede ser posterior que %2.;DEA=%1 kann nicht nach %2 liegen.';
      Text014@1014 : TextConst 'ENU=You have changed %1 on the service item, but it has not been changed on the associated service orders/quotes.\;ESP=Ha modificado %1 en el prod. servicio, pero no ha sido modificado en las ofertas/pedidos servicio asociados.\;DEA=Sie haben %1 fr den Serviceartikel gendert. Die zugehrigen Serviceauftrge/-angebote wurden jedoch nicht gendert.\';
      Text015@1015 : TextConst 'ENU=You must update them manually.;ESP=Debe actualizarlos manualmente.;DEA=Sie mssen sie manuell aktualisieren.';
      ServMgtSetup@1016 : Record 5911;
      ServItem@1017 : Record 5940;
      ServItemGr@1018 : Record 5904;
      ServContract@1019 : Record 5965;
      ServContractLine@1031 : Record 5964;
      ServCommentLine@1020 : Record 5906;
      Item@1021 : Record 27;
      ContractChangeLog@1022 : Record 5967;
      ServLedgEntry@1024 : Record 5907;
      ServItemLine@1025 : Record 5901;
      ServItemComponent@1026 : Record 5941;
      ResSkill@1034 : Record 5956;
      Currency@1008 : Record 4;
      NoSeriesMgt@1027 : Codeunit 396;
      ServLogMgt@1028 : Codeunit 5906;
      MoveEntries@1032 : Codeunit 361;
      ResSkillMgt@1033 : Codeunit 5931;
      Text016@1029 : TextConst 'ENU=You cannot change the %1 because there are outstanding service orders/quotes attached to it.;ESP=No puede modificar el %1 porque existen ofertas/pedidos servicio pendientes relacionados con l.;DEA=Sie knnen %1 nicht ndern, da zugehrige offene Serviceauftrge/ -angebote existieren.';
      Text017@1030 : TextConst 'ENU=Service ledger entries exist for this %1\\ Do you want to change the %2?;ESP=Existen movs. servicio para este %1\\ ¨Desea modificar el %2?;DEA=Es sind Serviceposten fr diesen %1 vorhanden.\\Mchten Sie %2 ndern?';
      DimMgt@1039 : Codeunit 408;
      CancelResSkillChanges@1035 : Boolean;
      CancelResSkillAssignment@1036 : Boolean;

    PROCEDURE AssistEdit@3(OldServItem@1000 : Record 5940) : Boolean;
    BEGIN
      WITH ServItem DO BEGIN
        ServItem := Rec;
        ServMgtSetup.GET;
        ServMgtSetup.TESTFIELD("Service Item Nos.");
        IF NoSeriesMgt.SelectSeries(ServMgtSetup."Service Item Nos.",OldServItem."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ServItem;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ServItemLinesExist@2() : Boolean;
    BEGIN
      ServItemLine.RESET;
      ServItemLine.SETCURRENTKEY("Service Item No.");
      ServItemLine.SETRANGE("Service Item No.","No.");
      EXIT(ServItemLine.FINDFIRST);
    END;

    PROCEDURE MessageIfServItemLinesExist@8(ChangedFieldName@1000 : Text[100]);
    BEGIN
      IF ServItemLinesExist THEN
        MESSAGE(
          Text014 +
          Text015,
          ChangedFieldName);
    END;

    PROCEDURE DeleteServItemComponents@6();
    BEGIN
      ServItemComponent.RESET;
      ServItemComponent.SETRANGE("Parent Service Item No.","No.");
      ServItemComponent.DELETEALL;
    END;

    PROCEDURE ErrMessageIfServItemLinesExist@7(ChangedFieldName@1000 : Text[100]);
    BEGIN
      IF ServItemLinesExist THEN
        ERROR(
          Text016,
          ChangedFieldName);
    END;

    PROCEDURE ServLedgEntryExist@1() : Boolean;
    BEGIN
      ServLedgEntry.RESET;
      ServLedgEntry.SETCURRENTKEY(
        "Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",
        Type,"Posting Date",Open);
      ServLedgEntry.SETRANGE("Service Item No. (Serviced)","No.");
      EXIT(ServLedgEntry.FINDFIRST);
    END;

    PROCEDURE CheckifActiveServContLineExist@4() : Boolean;
    BEGIN
      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
      ServContractLine.SETRANGE("Service Item No.","No.");
      ServContractLine.SETFILTER("Contract Status",'<>%1',ServContractLine."Contract Status"::Cancelled);
      EXIT(ServContractLine.FIND('-'));
    END;

    PROCEDURE CheckIfCanBeDeleted@5() : Text[120];
    BEGIN
      IF ServItemLinesExist THEN
        EXIT(
          STRSUBSTNO(
            Text000,
            TABLECAPTION,"No."));

      ServItemComponent.RESET;
      ServItemComponent.SETCURRENTKEY(Type,"No.",Active);
      ServItemComponent.SETRANGE(Type,ServItemComponent.Type::"Service Item");
      ServItemComponent.SETRANGE("No.","No.");
      IF ServItemComponent.FINDFIRST THEN
        EXIT(
          STRSUBSTNO(
            Text001,
            TABLECAPTION,"No.",ServItemComponent.TABLECAPTION,ServItemComponent."Parent Service Item No."));

      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
      ServContractLine.SETRANGE("Service Item No.","No.");
      ServContractLine.SETFILTER("Contract Status",'<>%1',ServContractLine."Contract Status"::Cancelled);
      IF ServContractLine.FIND('-') THEN
        IF ServContract.GET(ServContractLine."Contract Type",ServContractLine."Contract No.") THEN
          EXIT(
            STRSUBSTNO(Text002,TABLECAPTION,"No."));
    END;

    PROCEDURE OmitAssignResSkillDialog@9();
    BEGIN
      ResSkillMgt.SkipValidationDialogs
    END;

    PROCEDURE OmitAssignResSkills@10(IsSetOmitted@1000 : Boolean);
    BEGIN
      CancelResSkillAssignment := IsSetOmitted;
    END;

    BEGIN
    END.
  }
}

