OBJECT Report 11511 Item Copy
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVDACH7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Copy;
               DEA=Artikel kopieren];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  d.OPEN(
                    Text001 + // copy item
                    Text002 + // From item
                    Text003 + // To item
                    '             #3############## #4#####');

                  d.UPDATE(1,Item."No.");
                  d.UPDATE(2,InItem."No.");
                  CopyItem(Item."No.",InItem."No.");

                  MESSAGE(
                    Text004 +
                    Text005 +
                    Text006 +
                    DialogTxt[1] + DialogTxt[2] + DialogTxt[3] + DialogTxt[4] + DialogTxt[5] +
                    DialogTxt[6] + DialogTxt[7] + DialogTxt[8] + DialogTxt[9] + DialogTxt[10] +
                    DialogTxt[11] + DialogTxt[12] + DialogTxt[13] + DialogTxt[14] + DialogTxt[15] +
                    DialogTxt[16] + DialogTxt[17] + DialogTxt[18] + DialogTxt[19] + DialogTxt[20] +
                    DialogTxt[21] + DialogTxt[22] + DialogTxt[23] + DialogTxt[24] + DialogTxt[25] +
                    DialogTxt[26] + DialogTxt[27] + DialogTxt[28] + DialogTxt[29] + DialogTxt[30],
                    Item."No.",InItem."No.");

                  d.CLOSE;

                  CopySuccessful := TRUE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   Item := TmpItem;
                   CLEAR(InItem);
                   NewNoSeries := '';
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             DEA=Optionen] }

      { 36  ;2   ;Field     ;
                  Lookup=Yes;
                  CaptionML=[ENU=Source Item No.;
                             DEA=Ausgangsartikelnr.];
                  SourceExpr=Item."No.";
                  TableRelation=Item }

      { 33  ;2   ;Field     ;
                  Name=TargetItemNo;
                  Lookup=Yes;
                  CaptionML=[ENU=Target Item No.;
                             DEA=Zielartikelnr.];
                  SourceExpr=InItem."No.";
                  OnLookup=BEGIN
                             IF PAGE.RUNMODAL(PAGE::"Item List",InItem,InItem."No.") = ACTION::LookupOK THEN;
                           END;
                            }

      { 1150015;2;Field     ;
                  AssistEdit=Yes;
                  CaptionML=[ENU=Target No. Series;
                             DEA=Zielnummernserien];
                  SourceExpr=NewNoSeries;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 ItemSetup.GET;
                                 ItemSetup.TESTFIELD("Item Nos.");
                                 NoSeriesMgt.SelectSeries(ItemSetup."Item Nos.",Item."No. Series",NewNoSeries);
                               END;
                                }

      { 1140000;2;Group     ;
                  CaptionML=[ENU=General;
                             DEA=Allgemein] }

      { 35  ;3   ;Field     ;
                  Name=GeneralItemInformation;
                  CaptionML=[ENU=General Item Information;
                             DEA=Allgemeine Artikelinformationen];
                  SourceExpr=CopyGenItemInfo }

      { 1   ;3   ;Field     ;
                  Name=Comments;
                  CaptionML=[ENU=Comments;
                             DEA=Bemerkungen];
                  SourceExpr=CopyComments }

      { 3   ;3   ;Field     ;
                  CaptionML=[ENU=Picture;
                             DEA=Bild];
                  SourceExpr=CopyPic }

      { 41  ;2   ;Group     ;
                  CaptionML=[ENU=Sale;
                             DEA=Verkauf] }

      { 1150007;3;Field     ;
                  Name=SalesPrices;
                  CaptionML=[ENU=Sales Prices;
                             DEA=VK-Preise];
                  SourceExpr=CopySalesPrices }

      { 1150009;3;Field     ;
                  Name=SalesLineDisc;
                  CaptionML=[ENU=Sales Line Disc.;
                             DEA=VK-Zeilenrabatte];
                  SourceExpr=CopySalesLineDisc }

      { 39  ;2   ;Group     ;
                  CaptionML=[ENU=Purchase;
                             DEA=Einkauf] }

      { 1150013;3;Field     ;
                  Name=PurchasePrices;
                  CaptionML=[ENU=Purchase Prices;
                             DEA=EK-Preise];
                  SourceExpr=CopyPurchPrices }

      { 1150011;3;Field     ;
                  Name=PurchaseLineDisc;
                  CaptionML=[ENU=Purchase Line Disc.;
                             DEA=EK-Zeilenrabatte];
                  SourceExpr=CopyPurchLineDisc }

      { 1150000;2;Group     ;
                  CaptionML=[ENU=Service;
                             DEA=Service] }

      { 1150003;3;Field     ;
                  Name=Troubleshooting;
                  CaptionML=[ENU=Troubleshooting;
                             DEA=Lîsungsanleitung];
                  SourceExpr=CopyTroubleshooting }

      { 1150005;3;Field     ;
                  Name=ResourceSkills;
                  CaptionML=[ENU=Resource Skills;
                             DEA=Ressourcenqualifikationen];
                  SourceExpr=CopyResourceSkills }

      { 1140011;2;Group     ;
                  CaptionML=[ENU=Extended;
                             DEA=Erweitert] }

      { 5   ;3   ;Field     ;
                  Name=UnitsOfMeasure;
                  CaptionML=[ENU=Units of measure;
                             DEA=Einheiten];
                  SourceExpr=CopyUnitOfMeasure }

      { 7   ;3   ;Field     ;
                  Name=ItemVariants;
                  CaptionML=[ENU=Item Variants;
                             DEA=Artikelvarianten];
                  SourceExpr=CopyVariants }

      { 9   ;3   ;Field     ;
                  Name=Translations;
                  CaptionML=[ENU=Translations;
                             DEA=öbersetzungen];
                  SourceExpr=CopyTranslations }

      { 11  ;3   ;Field     ;
                  Name=ExtendedTexts;
                  CaptionML=[ENU=Extended Texts;
                             DEA=Textbausteine];
                  SourceExpr=CopyExtTxt }

      { 13  ;3   ;Field     ;
                  Name=BOMComponents;
                  CaptionML=[ENU=BOM Components;
                             DEA=StÅcklistenkomponenten];
                  SourceExpr=CopyBOM }

      { 1150001;3;Field     ;
                  Name=Dimensions;
                  CaptionML=[ENU=Dimensions;
                             DEA=Dimensionen];
                  SourceExpr=CopyDimensions }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Item@1150000 : Record 27;
      InItem@1150001 : Record 27;
      Comments@1150002 : Record 97;
      ItemUnitOfMeasure@1150003 : Record 5404;
      ItemVariant@1150004 : Record 5401;
      ItemTranslation@1150005 : Record 30;
      ExtTxtHead@1150006 : Record 279;
      ExtTxtLine@1150007 : Record 280;
      BOMComponent@1150008 : Record 90;
      ItemVendor@1150013 : Record 99;
      TmpItem@1150020 : Record 27;
      ItemSetup@1150021 : Record 313;
      DefaultDim@1150072 : Record 352;
      TroubleshootingSetup@1150074 : Record 5945;
      ResSkills@1150076 : Record 5956;
      SalesPrice@1150032 : Record 7002;
      SalesLineDisc@1150033 : Record 7004;
      PurchPrice@1150035 : Record 7012;
      PurchLineDisc@1150036 : Record 7014;
      CopyGenItemInfo@1150022 : Boolean;
      CopyComments@1150023 : Boolean;
      CopyPic@1150024 : Boolean;
      CopyUnitOfMeasure@1150025 : Boolean;
      CopyVariants@1150026 : Boolean;
      CopyTranslations@1150027 : Boolean;
      CopyExtTxt@1150028 : Boolean;
      CopyBOM@1150029 : Boolean;
      CopyItemVendor@1150034 : Boolean;
      CopyDimensions@1150071 : Boolean;
      CopyTroubleshooting@1150073 : Boolean;
      CopyResourceSkills@1150075 : Boolean;
      CopySalesPrices@1150009 : Boolean;
      CopySalesLineDisc@1150010 : Boolean;
      CopyPurchPrices@1150011 : Boolean;
      CopyPurchLineDisc@1150012 : Boolean;
      DialogTxt@1150038 : ARRAY [30] OF Text[250];
      DialogTitle@1150039 : Text[50];
      d@1150040 : Dialog;
      RecCount@1150041 : Integer;
      CopyCount@1150042 : Integer;
      NoSeriesMgt@1150043 : Codeunit 396;
      TmpItemNo@1150044 : Code[20];
      CopySuccessful@1150045 : Boolean;
      Text001@1150046 : TextConst 'ENU=Copy Item\\;DEA=Artikel kopieren\\';
      Text002@1150047 : TextConst 'ENU=Source Item     #1########\;DEA=Ausgangsartikel     #1########\';
      Text003@1150048 : TextConst 'ENU=Target Item     #2########\;DEA=Zielartikel         #2########\';
      Text004@1150049 : TextConst 'ENU=Recapitulation of copy job:\\;DEA=Zusammenfassung von Kopierauftrag:\\';
      Text005@1150050 : TextConst 'ENU=Source Item: %1\;DEA=Ausgangsartikel: %1\';
      Text006@1150051 : TextConst 'ENU=Target Item: %2\;DEA=Zielartikel: %2\';
      Text007@1150052 : TextConst 'ENU=Source Item No. %1 doesn''t exist.;DEA=Ausgangsartikel %1 existiert nicht.';
      Text008@1150053 : TextConst 'ENU=Target Item No. must not be empty.;DEA=Zielartikelnr. darf nicht leer sein.';
      Text009@1150054 : TextConst 'ENU=General item information;DEA=Allg. Artikelinformationen';
      Text010@1150055 : TextConst 'ENU=Target Item No.%1 already exists.;DEA=Zielartikel %1 ist bereits vorhanden.';
      Text011@1150056 : TextConst 'ENU=Target Item %1 doesn''t exist.;DEA=Zielartikel %1 existiert nicht.';
      Text012@1150057 : TextConst 'ENU=Item picture;DEA=Bild von Artikel';
      Text013@1150058 : TextConst 'ENU=Comments;DEA=Bemerkungen';
      Text014@1150059 : TextConst 'ENU=Item units of measure;DEA=Ma·einheiten Artikel';
      Text015@1150060 : TextConst 'ENU=Item variants;DEA=Artikelvarianten';
      Text016@1150061 : TextConst 'ENU=Item translations;DEA=ArtikelÅbersetzungen';
      Text017@1150062 : TextConst 'ENU=Extended texts;DEA=Textbausteine';
      Text018@1150063 : TextConst 'ENU=BOM components;DEA=StÅcklistenkomponenten';
      Text021@1150066 : TextConst 'ENU=Item vendors;DEA=Debitoren Artikel';
      Text025@1150070 : TextConst 'ENU=copied.;DEA=kopiert.';
      Text026@1150077 : TextConst 'ENU=Resource skills;DEA=Ressourcenqualifikationen';
      Text027@1150078 : TextConst 'ENU=Dimensions;DEA=Dimensionen';
      Text028@1150079 : TextConst 'ENU=Troubleshootings;DEA=Lîsungsanleitungen';
      Text029@1150014 : TextConst 'ENU=Sales Prices;DEA=VK-Preise';
      Text030@1150015 : TextConst 'ENU=Sales Line Disc.;DEA=VK-Zeilenrabatte';
      Text031@1150030 : TextConst 'ENU=Purchase Prices;DEA=EK-Preise';
      Text032@1150031 : TextConst 'ENU=Purchase Line Disc.;DEA=EK-Zeilenrabatte';
      NewNoSeries@1150064 : Code[10];

    PROCEDURE CopyItem@8(_FromItemNo@1150000 : Code[20];_InItemNo@1150001 : Code[20]);
    BEGIN
      IF NOT Item.GET(_FromItemNo) THEN
        ERROR(Text007,_FromItemNo);

      IF (_InItemNo = '') AND (NOT CopyGenItemInfo) THEN
        ERROR(Text008);

      ItemSetup.GET;

      IF CopyGenItemInfo THEN BEGIN
        IF _InItemNo = '' THEN BEGIN
          InitDialog(Text009);

          IF NewNoSeries <> '' THEN BEGIN
            NoSeriesMgt.SetSeries(InItem."No.");
            InItem."No. Series" := NewNoSeries;
          END ELSE BEGIN
            ItemSetup.TESTFIELD("Item Nos.");
            NoSeriesMgt.InitSeries(ItemSetup."Item Nos.",Item."No. Series",0D,InItem."No.",InItem."No. Series");
          END;

          TmpItemNo := InItem."No.";

          InItem.COPY(Item);
          InItem."No." := TmpItemNo;
          InItem."Last Date Modified" := TODAY;
          InItem.INSERT;

          EndDialog;
        END
        ELSE BEGIN
          IF InItem.GET(_InItemNo) THEN
            ERROR(Text010,_InItemNo);

          IF ItemSetup."Item Nos." <> '' THEN
            NoSeriesMgt.TestManual(ItemSetup."Item Nos.");

          InitDialog(Text009);

          InItem.COPY(Item);
          InItem."No." := _InItemNo;
          InItem."No. Series" := '';
          InItem."Last Date Modified" := TODAY;
          InItem.INSERT;

          EndDialog;
        END;
      END
      ELSE BEGIN
        IF NOT InItem.GET(_InItemNo) THEN
          ERROR(Text011,_InItemNo);
      END;

      IF NOT (CopySalesLineDisc OR CopyPurchLineDisc) THEN BEGIN
        InItem."Item Disc. Group" := '';
        InItem.MODIFY;
      END;

      // Copy picture
      IF CopyPic THEN BEGIN
        Item.CALCFIELDS(Picture);
        IF Item.Picture.HASVALUE THEN BEGIN
          InitDialog(Text012);
          InItem.Picture := Item.Picture;
          InItem.MODIFY;
          EndDialog;
        END;
      END;

      // Copy Comments
      IF CopyComments THEN BEGIN
        Comments.SETRANGE("Table Name",Comments."Table Name"::Item);
        Comments.SETRANGE("No.",Item."No.");
        IF Comments.FIND('-') THEN BEGIN
          InitDialog(Text013);
          REPEAT
            Comments."No." := InItem."No.";
            Comments.INSERT;
            Comments."No." := Item."No.";
            UpdateDialog;
          UNTIL Comments.NEXT = 0;
          EndDialog;
        END;
      END;

      // copy units of measure
      IF CopyUnitOfMeasure THEN BEGIN
        ItemUnitOfMeasure.SETRANGE("Item No.",Item."No.");
        IF ItemUnitOfMeasure.FIND('-') THEN BEGIN
          InitDialog(Text014);
          REPEAT
            ItemUnitOfMeasure."Item No." := InItem."No.";
            ItemUnitOfMeasure.INSERT;
            ItemUnitOfMeasure."Item No." := Item."No.";
            UpdateDialog;
          UNTIL ItemUnitOfMeasure.NEXT = 0;
          EndDialog;
        END;
      END ELSE BEGIN
        IF CopyGenItemInfo THEN BEGIN
          InItem."Base Unit of Measure" := '';
          InItem."Sales Unit of Measure" := '';
          InItem."Purch. Unit of Measure" := '';
          InItem.MODIFY;
        END;
      END;

      // copy variants
      IF CopyVariants THEN BEGIN
        ItemVariant.SETRANGE("Item No.",Item."No.");
        IF ItemVariant.FIND('-') THEN BEGIN
          InitDialog(Text015);
          REPEAT
            ItemVariant."Item No." := InItem."No.";
            ItemVariant.INSERT;
            ItemVariant."Item No." := Item."No.";
            UpdateDialog;
          UNTIL ItemVariant.NEXT = 0;
          EndDialog;
        END;
      END;

      // copy item translations
      IF CopyTranslations THEN BEGIN
        ItemTranslation.SETRANGE("Item No.",Item."No.");
        IF NOT CopyVariants THEN
          ItemTranslation.SETRANGE("Variant Code",'');
        IF ItemTranslation.FIND('-') THEN BEGIN
          InitDialog(Text016);
          REPEAT
            ItemTranslation."Item No." := InItem."No.";
            ItemTranslation.INSERT;
            ItemTranslation."Item No." := Item."No.";
            UpdateDialog;
          UNTIL ItemTranslation.NEXT = 0;
          EndDialog;
        END;
      END;

      // Copy extended texts
      IF CopyExtTxt THEN BEGIN
        ExtTxtHead.SETRANGE("Table Name",ExtTxtHead."Table Name"::Item);
        ExtTxtHead.SETRANGE("No.",Item."No.");
        IF ExtTxtHead.FIND('-') THEN BEGIN
          InitDialog(Text017);
          REPEAT
            ExtTxtLine.SETRANGE("Table Name",ExtTxtHead."Table Name");
            ExtTxtLine.SETRANGE("No.",ExtTxtHead."No.");
            ExtTxtLine.SETRANGE("Language Code",ExtTxtHead."Language Code");
            ExtTxtLine.SETRANGE("Text No.",ExtTxtHead."Text No.");
            IF ExtTxtLine.FIND('-') THEN
              REPEAT
                ExtTxtLine."No." := InItem."No.";
                ExtTxtLine.INSERT;
                ExtTxtLine."No." := Item."No.";
              UNTIL ExtTxtLine.NEXT = 0;

            // change header
            ExtTxtHead."No." := InItem."No.";
            ExtTxtHead.INSERT;
            ExtTxtHead."No." := Item."No.";
            UpdateDialog;
          UNTIL ExtTxtHead.NEXT = 0;
          EndDialog;
        END;
      END;

      // copy BOM
      IF CopyBOM THEN BEGIN
        BOMComponent.SETRANGE("Parent Item No.",Item."No.");
        IF BOMComponent.FIND('-') THEN BEGIN
          InitDialog(Text018);
          REPEAT
            BOMComponent."Parent Item No." := InItem."No.";
            BOMComponent.INSERT;
            BOMComponent."Parent Item No." := Item."No.";
            UpdateDialog;
          UNTIL BOMComponent.NEXT = 0;
          EndDialog;
        END;
      END;

      // copy item vendors
      IF CopyItemVendor THEN BEGIN
        ItemVendor.SETRANGE("Item No.",Item."No.");
        IF ItemVendor.FIND('-') THEN BEGIN
          InitDialog(Text021);
          REPEAT
            ItemVendor."Item No." := InItem."No.";
            ItemVendor.INSERT;
            ItemVendor."Item No." := Item."No.";
            UpdateDialog;
          UNTIL ItemVendor.NEXT = 0;
          EndDialog;
        END;
      END;

      IF CopyDimensions THEN BEGIN
        DefaultDim.SETRANGE("Table ID",27);
        DefaultDim.SETRANGE("No.",Item."No.");
        IF DefaultDim.FIND('-') THEN BEGIN
          InitDialog(Text027);
          REPEAT
            DefaultDim."No." := InItem."No.";
            DefaultDim.INSERT;
            DefaultDim."No." := Item."No.";
            UpdateDialog;
          UNTIL DefaultDim.NEXT = 0;
          EndDialog;
        END;
        InItem."Global Dimension 1 Code" := Item."Global Dimension 1 Code";
        InItem."Global Dimension 2 Code" := Item."Global Dimension 2 Code";
        InItem.MODIFY;
      END ELSE BEGIN
        IF CopyGenItemInfo THEN BEGIN
          InItem."Global Dimension 1 Code" := '';
          InItem."Global Dimension 2 Code" := '';
          InItem.MODIFY;
        END;
      END;

      IF CopyTroubleshooting THEN BEGIN
        TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
        TroubleshootingSetup.SETRANGE("No.",Item."No.");
        IF TroubleshootingSetup.FIND('-') THEN BEGIN
          InitDialog(Text028);
          REPEAT
            TroubleshootingSetup."No." := InItem."No.";
            TroubleshootingSetup.INSERT;
            TroubleshootingSetup."No." := Item."No.";
            UpdateDialog;
          UNTIL TroubleshootingSetup.NEXT = 0;
          EndDialog;
        END;
      END;

      // copy resource skills
      IF CopyResourceSkills THEN BEGIN
        ResSkills.SETRANGE(Type,ResSkills.Type::Item);
        ResSkills.SETRANGE("No.",Item."No.");
        IF ResSkills.FIND('-') THEN BEGIN
          InitDialog(Text026);
          REPEAT
            ResSkills."No." := InItem."No.";
            ResSkills.INSERT;
            ResSkills."No." := Item."No.";
            UpdateDialog;
          UNTIL ResSkills.NEXT = 0;
          EndDialog;
        END;
      END;

      // copy discounts
      IF CopySalesPrices THEN BEGIN
        SalesPrice.SETRANGE("Item No.",Item."No.");
        IF SalesPrice.FIND('-') THEN BEGIN
          InitDialog(Text029);
          REPEAT
            SalesPrice."Item No." := InItem."No.";
            SalesPrice.INSERT;
            SalesPrice."Item No." := Item."No.";
            UpdateDialog;
          UNTIL SalesPrice.NEXT = 0;
        END;
      END;

      IF CopySalesLineDisc THEN BEGIN
        SalesLineDisc.SETRANGE(Type,SalesLineDisc.Type::Item);
        SalesLineDisc.SETRANGE(Code,Item."No.");
        IF SalesLineDisc.FIND('-') THEN BEGIN
          InitDialog(Text030);
          REPEAT
            SalesLineDisc.Code := InItem."No.";
            SalesLineDisc.INSERT;
            SalesLineDisc.Code := Item."No.";
            UpdateDialog;
          UNTIL SalesLineDisc.NEXT = 0;
        END;
      END;

      IF CopyPurchPrices THEN BEGIN
        PurchPrice.SETRANGE("Item No.",Item."No.");
        IF PurchPrice.FIND('-') THEN BEGIN
          InitDialog(Text031);
          REPEAT
            PurchPrice."Item No." := InItem."No.";
            PurchPrice.INSERT;
            PurchPrice."Item No." := Item."No.";
            UpdateDialog;
          UNTIL PurchPrice.NEXT = 0;
        END;
      END;

      IF CopyPurchLineDisc THEN BEGIN
        PurchLineDisc.SETRANGE("Item No.",Item."No.");
        IF PurchLineDisc.FIND('-') THEN BEGIN
          InitDialog(Text032);
          REPEAT
            PurchLineDisc."Item No." := InItem."No.";
            PurchLineDisc.INSERT;
            PurchLineDisc."Item No." := Item."No.";
            UpdateDialog;
          UNTIL PurchLineDisc.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InitDialog@1(Txt@1150000 : Text[50]);
    BEGIN
      RecCount := 0;
      CopyCount := CopyCount + 1;
      DialogTitle := Txt;
      d.UPDATE(3,Txt);
      d.UPDATE(4,0);
    END;

    PROCEDURE UpdateDialog@2();
    BEGIN
      RecCount := RecCount + 1;
      d.UPDATE(4,RecCount);
    END;

    PROCEDURE EndDialog@3();
    BEGIN
      IF RecCount <> 0 THEN
        DialogTitle := STRSUBSTNO('%1 %2',RecCount,DialogTitle);
      DialogTitle := DialogTitle + ' ' + Text025;
      DialogTxt[CopyCount] := DialogTitle + '\';
    END;

    PROCEDURE ItemDef@4(VAR Item2@1150000 : Record 27);
    BEGIN
      TmpItem := Item2;
    END;

    PROCEDURE ItemReturn@5(VAR ReturnItem@1150000 : Record 27) : Boolean;
    BEGIN
      ReturnItem := InItem;
      EXIT(CopySuccessful);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

