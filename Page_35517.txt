OBJECT Page 35517 Payment Journal FactBox
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVDACH7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payment Journal Details;
               DEA=Zlg.-Ausg. Buch.-Blatt Details];
    SourceTable=Table81;
    PageType=CardPart;
    OnFindRecord=BEGIN
                   IF FIND(Which) THEN BEGIN
                     GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                     UpdateBalance;
                     UpdateInfoBox;
                   END ELSE BEGIN
                     AccName := '';
                     BalAccName := '';
                     AgeDays := 0;
                     PaymDiscDays := 0;
                     DueDays := 0;
                     OeRemainAmountFC := 0;
                     PaymDiscDeductAmount := 0;
                     RemainAfterPayment := 0;
                     PmtDiscount := 0;
                     AcceptedPaymentTol := 0;
                     PostingDate := 0D;
                     DueDate := 0D;
                     PmtDiscDate := 0D;
                     PaymentAmt := 0;
                     RemainAfterPaymentCaption := Text001;
                     RemainAfterPaymentText := FORMAT(0.0,0,Text002);
                     PaymentTerms := '';
                   END;
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);

                       UpdateBalance;
                       UpdateInfoBox;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1150027;1;Field     ;
                CaptionML=[ENU=Name;
                           DEA=Name];
                SourceExpr=AccName;
                Editable=FALSE }

    { 1150029;1;Field     ;
                CaptionML=[ENU=Payment Terms;
                           DEA=Zahlungsbedingungen];
                ToolTipML=[ENU=Payment term of vendor;
                           DEA=Zahlungsbedingungen Kreditor];
                SourceExpr=PaymentTerms;
                Editable=FALSE }

    { 1150021;1;Field     ;
                CaptionML=[ENU=Open Amt.;
                           DEA=Offener Betr.];
                ToolTipML=[ENU=Remaining amount of open entry;
                           DEA=Restbetrag des offenen Postens];
                SourceExpr=OeRemainAmountFC;
                Editable=FALSE }

    { 1150022;1;Field     ;
                CaptionML=[ENU=Payment;
                           DEA=Zahlung];
                ToolTipML=[ENU=Payment amount of actual line;
                           DEA=Zahlungsbetrag der aktuellen Zeile];
                SourceExpr=PaymentAmt;
                Editable=FALSE }

    { 1150023;1;Field     ;
                CaptionML=[ENU=Remaining after Payment;
                           DEA=Rest nach Zahlung];
                SourceExpr=RemainAfterPaymentText;
                CaptionClass=FORMAT(RemainAfterPaymentCaption);
                Editable=FALSE }

    { 1150015;1;Field     ;
                CaptionML=[ENU=Pmt. Discount;
                           DEA=Skonto];
                ToolTipML=[ENU=Payment discount possible;
                           DEA=Skonto m”glich];
                SourceExpr=PmtDiscount;
                Editable=FALSE }

    { 1150017;1;Field     ;
                CaptionML=[ENU=Deduction;
                           DEA=Abzug];
                ToolTipML=[ENU="Accepted payment discount deduction ";
                           DEA="Abzug akzeptierter Skonto "];
                SourceExpr=PaymDiscDeductAmount;
                Editable=FALSE }

    { 1150016;1;Field     ;
                CaptionML=[ENU=Pmt. Tolerance;
                           DEA=Zahlungstoleranz];
                ToolTipML=[ENU=Accepted payment tolerance;
                           DEA=Akzeptierte Zahlungstoleranz];
                SourceExpr=AcceptedPaymentTol;
                Editable=FALSE }

    { 1150011;1;Field     ;
                CaptionML=[ENU=Age;
                           DEA=Alter];
                ToolTipML=[ENU=Posting date of open entry;
                           DEA=Buchungsdatum des offenen Postens];
                BlankZero=Yes;
                SourceExpr=PostingDate;
                Editable=FALSE }

    { 1150006;1;Field     ;
                CaptionML=[ENU=Age Days;
                           DEA=Alter Tage];
                ToolTipML=[ENU=Number of days since posting date of open entry;
                           DEA=Anz. Tage seit Buchung des offenen Postens];
                BlankZero=Yes;
                SourceExpr=AgeDays;
                Editable=FALSE }

    { 1150009;1;Field     ;
                CaptionML=[ENU=Due;
                           DEA=F„llig];
                ToolTipML=[ENU=Due date of open entry;
                           DEA=F„lligkeitsdatum des offenen Postens];
                BlankZero=Yes;
                SourceExpr=DueDate;
                Editable=FALSE }

    { 1150004;1;Field     ;
                CaptionML=[ENU=Due Days;
                           DEA=F„lligkeit Tage];
                ToolTipML=[ENU=Number of days until due date of open entry;
                           DEA=Anz. Tage bis F„lligkeit des offenen Postens];
                BlankZero=Yes;
                SourceExpr=DueDays;
                Editable=FALSE }

    { 1150010;1;Field     ;
                CaptionML=[ENU=Cash Discount;
                           DEA=Skonto];
                ToolTipML=[ENU=Payment disc. date of open entry;
                           DEA=Skontodatum des offenen Postens];
                BlankZero=Yes;
                SourceExpr=PmtDiscDate;
                Editable=FALSE }

    { 1150005;1;Field     ;
                CaptionML=[ENU=Cash Discount Days;
                           DEA=Skonto Tage];
                ToolTipML=[ENU=Days to payment disc. date;
                           DEA=Tage bis Skontodatum];
                BlankZero=Yes;
                SourceExpr=PaymDiscDays;
                Editable=FALSE }

    { 1150007;1;Field     ;
                Name=TotalPayment;
                CaptionML=[ENU=Payments;
                           DEA=Zahlungen];
                ToolTipML=[ENU=Total of payments in local currency;
                           DEA=Zahlung gesamt in Landesw„hrung];
                SourceExpr=TotalPayAmount;
                AutoFormatType=1;
                Editable=FALSE }

    { 1150002;1;Field     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           DEA=Saldo];
                ToolTipML=[ENU=Balance in LCY to actual line;
                           DEA=Saldo in MW bis aktuelle Zeile];
                SourceExpr=Balance;
                AutoFormatType=1;
                Editable=FALSE }

    { 1150000;1;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           DEA=Gesamtsaldo];
                ToolTipML=[ENU=Total balance in LCY;
                           DEA=Gesamtsaldo in MW];
                SourceExpr=TotalBalance;
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      GenJnlManagement@1007 : Codeunit 230;
      AccName@1012 : Text[50];
      BalAccName@1013 : Text[50];
      RemainAfterPaymentCaption@1150003 : Text[30];
      RemainAfterPaymentText@1150004 : Text[30];
      Balance@1014 : Decimal;
      TotalBalance@1015 : Decimal;
      VendLedgEntry@1150000 : Record 25;
      Vend@1150014 : Record 23;
      AgeDays@1150013 : Integer;
      PaymDiscDays@1150012 : Integer;
      DueDays@1150011 : Integer;
      OeRemainAmountFC@1150010 : Decimal;
      PaymDiscDeductAmount@1150008 : Decimal;
      RemainAfterPayment@1150006 : Decimal;
      TotalPayAmount@1150005 : Decimal;
      PmtDiscount@1150007 : Decimal;
      AcceptedPaymentTol@1150009 : Decimal;
      Text001@1150001 : TextConst 'ENU=Remaining after Payment;DEA=Rest nach Zahlung';
      Text002@1150002 : TextConst 'ENU=<Precision,2:2><Standard Format,0>;DEA=<Precision,2:2><Standard Format,0>';
      PostingDate@1150015 : Date;
      DueDate@1150016 : Date;
      PmtDiscDate@1150017 : Date;
      PaymentAmt@1150018 : Decimal;
      PaymentTerms@1150019 : Code[10];

    LOCAL PROCEDURE UpdateBalance@1();
    VAR
      GenJnlLine@1150000 : Record 81;
      LineNo@1150001 : Integer;
    BEGIN
      Balance := 0;
      TotalBalance := 0;
      TotalPayAmount := 0;

      LineNo := "Line No.";
      PaymentAmt := -Amount;

      GenJnlLine.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Account Type","Document Type");
      GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF GenJnlLine.FINDSET THEN
        REPEAT
          TotalBalance := TotalBalance + GenJnlLine."Balance (LCY)";
          IF GenJnlLine."Line No." <= LineNo THEN
            Balance := Balance + GenJnlLine."Balance (LCY)";
          IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment) AND
             (GenJnlLine."Account Type" = GenJnlLine."Account Type"::Vendor)
          THEN
            TotalPayAmount := TotalPayAmount - GenJnlLine."Amount (LCY)";
        UNTIL GenJnlLine.NEXT = 0
    END;

    PROCEDURE UpdateInfoBox@2();
    VAR
      ExchRate@1150000 : Record 330;
      Currency@1150001 : Record 4;
    BEGIN
      AgeDays := 0;
      PaymDiscDays := 0;
      DueDays := 0;
      OeRemainAmountFC := 0;
      PaymDiscDeductAmount := 0;
      RemainAfterPayment := 0;
      PmtDiscount := 0;
      AcceptedPaymentTol := 0;
      RemainAfterPaymentCaption := Text001;
      RemainAfterPaymentText := FORMAT(0.0,0,Text002);
      PostingDate := 0D;
      DueDate := 0D;
      PmtDiscDate := 0D;
      PaymentTerms := '';

      VendLedgEntry.INIT;
      Vend.INIT;

      IF "Applies-to Doc. No." = '' THEN
        EXIT;

      VendLedgEntry.SETCURRENTKEY("Document No.");
      VendLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
      VendLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
      IF NOT VendLedgEntry.FINDFIRST THEN
        EXIT;

      IF Currency.READPERMISSION THEN
        IF Currency.GET("Currency Code") THEN
          Currency.InitRoundingPrecision;

      IF NOT Vend.GET(VendLedgEntry."Vendor No.") THEN;
      PaymentTerms := Vend."Payment Terms Code";

      // Calculate Days for Age, Payment Discount
      IF "Posting Date" > 0D THEN BEGIN
        PostingDate := VendLedgEntry."Posting Date";
        PmtDiscDate := VendLedgEntry."Pmt. Discount Date";
        DueDate := VendLedgEntry."Due Date";
        IF VendLedgEntry."Posting Date" > 0D THEN
          AgeDays := "Posting Date" - VendLedgEntry."Posting Date";
        IF VendLedgEntry."Pmt. Discount Date" > 0D THEN
          PaymDiscDays := VendLedgEntry."Pmt. Discount Date" - "Posting Date";
        IF VendLedgEntry."Due Date" > 0D THEN
          DueDays := VendLedgEntry."Due Date" - "Posting Date";
      END;

      VendLedgEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)");
      OeRemainAmountFC := -VendLedgEntry."Remaining Amount";
      PmtDiscount := -VendLedgEntry."Remaining Pmt. Disc. Possible";
      PmtDiscount :=
        ExchRate.ExchangeAmtFCYToFCY("Posting Date",VendLedgEntry."Currency Code",
          "Currency Code",-VendLedgEntry."Remaining Pmt. Disc. Possible");
      PmtDiscount := ROUND(PmtDiscount,Currency."Amount Rounding Precision");

      // calculate FC-amount of open entries and remaining amount
      IF VendLedgEntry."Currency Code" <> "Currency Code" THEN BEGIN
        OeRemainAmountFC :=
          ExchRate.ExchangeAmtLCYToFCY(
            "Posting Date","Currency Code",-VendLedgEntry."Remaining Amt. (LCY)","Currency Factor");
        OeRemainAmountFC := ROUND(OeRemainAmountFC,Currency."Amount Rounding Precision");
      END;

      IF (VendLedgEntry."Pmt. Discount Date" >= "Posting Date") OR
         ((VendLedgEntry."Pmt. Disc. Tolerance Date" >= "Posting Date") AND
          VendLedgEntry."Accepted Pmt. Disc. Tolerance")
      THEN BEGIN
        PaymDiscDeductAmount := -VendLedgEntry."Remaining Pmt. Disc. Possible";
        IF VendLedgEntry."Currency Code" <> "Currency Code" THEN
          PaymDiscDeductAmount :=
            ExchRate.ExchangeAmtFCYToFCY(
              "Posting Date",VendLedgEntry."Currency Code","Currency Code",PaymDiscDeductAmount);
      END;
      PaymDiscDeductAmount := ROUND(PaymDiscDeductAmount,Currency."Amount Rounding Precision");

      // Accepted Payment Tolerance
      AcceptedPaymentTol := -VendLedgEntry."Accepted Payment Tolerance";
      IF VendLedgEntry."Currency Code" <> "Currency Code" THEN
        AcceptedPaymentTol :=
          ExchRate.ExchangeAmtFCYToFCY(
            "Posting Date",VendLedgEntry."Currency Code","Currency Code",AcceptedPaymentTol);
      AcceptedPaymentTol := ROUND(AcceptedPaymentTol,Currency."Amount Rounding Precision");

      RemainAfterPayment :=
        OeRemainAmountFC - Amount - PaymDiscDeductAmount - AcceptedPaymentTol;
      RemainAfterPaymentText := FORMAT(RemainAfterPayment,0,Text002);

      IF ("Currency Code" <> VendLedgEntry."Currency Code") AND
         (("Currency Code" <> '') AND (VendLedgEntry."Currency Code" <> ''))
      THEN BEGIN
        RemainAfterPaymentCaption := '';
        RemainAfterPaymentText := '';
        EXIT;
      END;

      // Pmt. Disc is not applied if entry is not closed
      IF RemainAfterPayment > 0 THEN BEGIN
        RemainAfterPayment := RemainAfterPayment + PaymDiscDeductAmount;
        RemainAfterPaymentText := FORMAT(RemainAfterPayment,0,Text002);
        PaymDiscDeductAmount := 0;
      END;
    END;

    BEGIN
    END.
  }
}

