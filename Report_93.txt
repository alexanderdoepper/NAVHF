OBJECT Report 93 Create Fiscal Year
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Fiscal Year;
               ESP=Crear ejercicio;
               DEA=Gesch„ftsjahr er”ffnen];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  AccountingPeriod."Starting Date" := FiscalYearStartDate;
                  AccountingPeriod.TESTFIELD("Starting Date");

                  IF AccountingPeriod.FIND('-') THEN BEGIN
                    FirstPeriodStartDate := AccountingPeriod."Starting Date";
                    FirstPeriodLocked := AccountingPeriod."Date Locked";
                    IF (FiscalYearStartDate < FirstPeriodStartDate) AND FirstPeriodLocked THEN
                      IF NOT
                         CONFIRM(
                           Text000 +
                           Text001)
                      THEN
                        EXIT;
                    IF AccountingPeriod.FIND('+') THEN
                      LastPeriodStartDate := AccountingPeriod."Starting Date";
                  END ELSE
                    IF NOT
                       CONFIRM(
                         Text002 +
                         Text003)
                    THEN
                      EXIT;

                  FiscalYearStartDate2 := FiscalYearStartDate;

                  FOR i := 1 TO NoOfPeriods + 1 DO BEGIN
                    IF (FiscalYearStartDate <= FirstPeriodStartDate) AND (i = NoOfPeriods + 1) THEN
                      EXIT;

                    IF FirstPeriodStartDate <> 0D THEN
                      IF (FiscalYearStartDate >= FirstPeriodStartDate) AND (FiscalYearStartDate < LastPeriodStartDate) THEN
                        ERROR(Text004);
                    AccountingPeriod.INIT;
                    AccountingPeriod."Starting Date" := FiscalYearStartDate;
                    AccountingPeriod.VALIDATE("Starting Date");
                    IF (i = 1) OR (i = NoOfPeriods + 1) THEN BEGIN
                      AccountingPeriod."New Fiscal Year" := TRUE;
                      InvtSetup.GET;
                      AccountingPeriod."Average Cost Calc. Type" := InvtSetup."Average Cost Calc. Type";
                      AccountingPeriod."Average Cost Period" := InvtSetup."Average Cost Period";
                    END;
                    IF (FirstPeriodStartDate = 0D) AND (i = 1) THEN
                      AccountingPeriod."Date Locked" := TRUE;
                    IF (AccountingPeriod."Starting Date" < FirstPeriodStartDate) AND FirstPeriodLocked THEN BEGIN
                      AccountingPeriod.Closed := TRUE;
                      AccountingPeriod."Date Locked" := TRUE;
                    END;
                    IF NOT AccountingPeriod.FIND('=') THEN
                      AccountingPeriod.INSERT;
                    FiscalYearStartDate := CALCDATE(PeriodLength,FiscalYearStartDate);
                  END;

                  AccountingPeriod.GET(FiscalYearStartDate2);
                  AccountingPeriod.UpdateAvgItems(0);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF NoOfPeriods = 0 THEN BEGIN
                     NoOfPeriods := 12;
                     EVALUATE(PeriodLength,'<1M>');
                   END;
                   IF AccountingPeriod.FIND('+') THEN
                     FiscalYearStartDate := AccountingPeriod."Starting Date";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESP=Opciones;
                             DEA=Optionen] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ESP=Fecha inicial;
                             DEA=Startdatum];
                  SourceExpr=FiscalYearStartDate }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=No. of Periods;
                             ESP=N§ de periodos;
                             DEA=Anzahl Perioden];
                  SourceExpr=NoOfPeriods }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ESP=Longitud periodo;
                             DEA=Periodenl„nge];
                  SourceExpr=PeriodLength }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\;ESP=El nuevo ejercicio comienza antes de un ejercicio ya existente, por tanto el nuevo ejercicio se cerrar  autom ticamente.\\;DEA=Das neue Gesch„ftsjahr beginnt vor einem bestehenden Gesch„ftsjahr, deshalb wird das neue Jahr automatisch abgeschlossen.\\';
      Text001@1001 : TextConst 'ENU=Do you want to create and close the fiscal year?;ESP=¨Confirma que desea crear y cerrar el ejercicio?;DEA=M”chten Sie das Gesch„ftsjahr er”ffnen und abschlieáen?';
      Text002@1002 : TextConst 'ENU=Once you create the new fiscal year you cannot change its starting date.\\;ESP=Una vez creado un ejercicio no se puede cambiar su fecha inicial.\\;DEA=Ist das Gesch„ftsjahr er”ffnet, kann das Startdatum nicht mehr ge„ndert werden.\\';
      Text003@1003 : TextConst 'ENU=Do you want to create the fiscal year?;ESP=¨Confirma que desea crear el ejercicio?;DEA=M”chten Sie das Gesch„ftsjahr er”ffnen?';
      Text004@1004 : TextConst 'ENU=It is only possible to create new fiscal years before or after the existing ones.;ESP=S¢lo se pueden crear ejercicios antes o despu‚s de los ejercicios existentes.;DEA=Neue Gesch„ftsjahre k”nnen nur vor oder nach den bestehenden er”ffnet werden.';
      AccountingPeriod@1005 : Record 50;
      InvtSetup@1013 : Record 313;
      NoOfPeriods@1006 : Integer;
      PeriodLength@1007 : DateFormula;
      FiscalYearStartDate@1008 : Date;
      FiscalYearStartDate2@1015 : Date;
      FirstPeriodStartDate@1009 : Date;
      LastPeriodStartDate@1010 : Date;
      FirstPeriodLocked@1011 : Boolean;
      i@1012 : Integer;

    PROCEDURE InitializeRequest@1(NewNoOfPeriods@1000 : Integer;NewPeriodLength@1001 : DateFormula;StartingDate@1002 : Date);
    BEGIN
      NoOfPeriods := NewNoOfPeriods;
      PeriodLength := NewPeriodLength;
      IF AccountingPeriod.FINDLAST THEN
        FiscalYearStartDate := AccountingPeriod."Starting Date"
      ELSE
        FiscalYearStartDate := StartingDate;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

