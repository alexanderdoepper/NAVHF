OBJECT Table 90 BOM Component
{
  OBJECT-PROPERTIES
  {
    Date=28.03.13;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Item.GET("Parent Item No.");
               IF Type = Type::Item THEN
                 ValidateAgainstRecursion("No.")
             END;

    OnModify=BEGIN
               Item.GET("Parent Item No.");
               IF Type = Type::Item THEN
                 ValidateAgainstRecursion("No.")
             END;

    OnRename=BEGIN
               Item.GET("Parent Item No.");
               IF Type = Type::Item THEN
                 ValidateAgainstRecursion("No.")
             END;

    CaptionML=[ENU=BOM Component;
               ESP=Componentes L.M.;
               DEA=StÅcklistenkomponente];
    LookupPageID=Page36;
    DrillDownPageID=Page36;
  }
  FIELDS
  {
    { 1   ;   ;Parent Item No.     ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Parent Item No.;
                                                              ESP=Nß L.M.;
                                                              DEA=Nr. Åbergeordneter Artikel];
                                                   NotBlank=Yes }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESP=Nß l°nea;
                                                              DEA=Zeilennr.] }
    { 3   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                "No." := '';
                                                                "Variant Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESP=Tipo;
                                                              DEA=Art];
                                                   OptionCaptionML=[ENU=" ,Item,Resource";
                                                                    ESP=" ,Producto,Recurso";
                                                                    DEA=" ,Artikel,Ressource"];
                                                   OptionString=[ ,Item,Resource] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                                "Variant Code" := '';
                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      ValidateAgainstRecursion("No.");
                                                                      Item.CALCFIELDS("Assembly BOM");
                                                                      "Assembly BOM" := Item."Assembly BOM";
                                                                      Description := Item.Description;
                                                                      "Unit of Measure Code" := Item."Base Unit of Measure";
                                                                      ParentItem.GET("Parent Item No.");
                                                                      CalcLowLevelCode.SetRecursiveLevelsOnItem(Item,ParentItem."Low-Level Code" + 1,TRUE);
                                                                      Item.FIND;
                                                                      ParentItem.FIND;
                                                                      IF ParentItem."Low-Level Code" >= Item."Low-Level Code" THEN
                                                                        ERROR(Text001,"No.");
                                                                    END;
                                                                  Type::Resource:
                                                                    BEGIN
                                                                      Res.GET("No.");
                                                                      "Assembly BOM" := FALSE;
                                                                      Description := Res.Name;
                                                                      "Unit of Measure Code" := Res."Base Unit of Measure";
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESP=Nß;
                                                              DEA=Nr.] }
    { 5   ;   ;Assembly BOM        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("BOM Component" WHERE (Type=CONST(Item),
                                                                                            Parent Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Assembly BOM;
                                                              ESP=L.M. de ensamblado;
                                                              DEA=MontagestÅckliste];
                                                   Editable=No }
    { 6   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESP=Descripci¢n;
                                                              DEA=Beschreibung] }
    { 7   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE IF (Type=CONST(Resource)) "Resource Unit of Measure".Code WHERE (Resource No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESP=C¢d. unidad medida;
                                                              DEA=Einheitencode] }
    { 8   ;   ;Quantity per        ;Decimal       ;CaptionML=[ENU=Quantity per;
                                                              ESP=Cantidad por;
                                                              DEA=Komponentenmenge];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 9   ;   ;Position            ;Code10        ;CaptionML=[ENU=Position;
                                                              ESP=Posici¢n;
                                                              DEA=Position] }
    { 10  ;   ;Position 2          ;Code10        ;CaptionML=[ENU=Position 2;
                                                              ESP=Posici¢n 2;
                                                              DEA=Position 2] }
    { 11  ;   ;Position 3          ;Code10        ;CaptionML=[ENU=Position 3;
                                                              ESP=Posici¢n 3;
                                                              DEA=Position 3] }
    { 12  ;   ;Machine No.         ;Code10        ;CaptionML=[ENU=Machine No.;
                                                              ESP=Nß maquina;
                                                              DEA=Maschinennr.] }
    { 13  ;   ;Lead-Time Offset    ;DateFormula   ;CaptionML=[ENU=Lead-Time Offset;
                                                              ESP=Desfase plazo entrega;
                                                              DEA=Vorlaufzeitverschiebung] }
    { 14  ;   ;BOM Description     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Parent Item No.)));
                                                   CaptionML=[ENU=BOM Description;
                                                              ESP=Descripci¢n L.M.;
                                                              DEA=StÅcklistenbeschreibung];
                                                   Editable=No }
    { 20  ;   ;Resource Usage Type ;Option        ;OnValidate=BEGIN
                                                                IF "Resource Usage Type" = xRec."Resource Usage Type" THEN
                                                                  EXIT;

                                                                TESTFIELD(Type,Type::Resource);
                                                              END;

                                                   CaptionML=[ENU=Resource Usage Type;
                                                              ESP=Tipo utiliz. recursos;
                                                              DEA=Ressourcenverbrauchsart];
                                                   OptionCaptionML=[ENU=Direct,Fixed;
                                                                    ESP=Directo,Fijo;
                                                                    DEA=Direkt,Fix];
                                                   OptionString=Direct,Fixed }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" = '' THEN
                                                                  EXIT;
                                                                TESTFIELD(Type,Type::Item);
                                                                TESTFIELD("No.");
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              ESP=C¢d. variante;
                                                              DEA=Variantencode] }
    { 5900;   ;Installed in Line No.;Integer      ;OnValidate=BEGIN
                                                                IF "Installed in Line No." <> 0 THEN BEGIN
                                                                  IF "Installed in Line No." = "Line No." THEN
                                                                    ERROR(Text000,FIELDCAPTION("Installed in Line No."));
                                                                  BOMComp.RESET;
                                                                  BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                                  BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                                  BOMComp.SETRANGE("Line No.","Installed in Line No.");
                                                                  BOMComp.FINDFIRST;
                                                                  BOMComp.TESTFIELD("Quantity per",1);
                                                                  "Installed in Item No." := BOMComp."No.";
                                                                END ELSE
                                                                  "Installed in Item No." := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              BOMComp.RESET;
                                                              BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                              BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                              BOMComp.SETFILTER("Line No.",'<>%1',"Line No.");
                                                              CLEAR(AssemblyBOM);
                                                              AssemblyBOM.SETTABLEVIEW(BOMComp);
                                                              AssemblyBOM.EDITABLE(FALSE);
                                                              AssemblyBOM.LOOKUPMODE(TRUE);
                                                              IF AssemblyBOM.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                AssemblyBOM.GETRECORD(BOMComp);
                                                                VALIDATE("Installed in Line No.",BOMComp."Line No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Installed in Line No.;
                                                              ESP=Instalado en nß l°n.;
                                                              DEA=Installiert in Zeilennr.] }
    { 5901;   ;Installed in Item No.;Code20       ;TableRelation=IF (Type=CONST(Item)) Item;
                                                   OnValidate=BEGIN
                                                                IF "Installed in Item No." <> '' THEN BEGIN
                                                                  BOMComp.RESET;
                                                                  BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                                  BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                                  BOMComp.SETRANGE("No.","Installed in Item No.");
                                                                  BOMComp.FINDFIRST;
                                                                END;

                                                                VALIDATE("Installed in Line No.",BOMComp."Line No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              BOMComp.RESET;
                                                              BOMComp.SETRANGE("Parent Item No.","Parent Item No.");
                                                              BOMComp.SETRANGE(Type,BOMComp.Type::Item);
                                                              BOMComp."No." := "Installed in Item No.";
                                                              BOMComp.SETFILTER("Line No.",'<>%1',"Line No.");
                                                              CLEAR(AssemblyBOM);
                                                              AssemblyBOM.SETTABLEVIEW(BOMComp);
                                                              AssemblyBOM.EDITABLE(FALSE);
                                                              AssemblyBOM.LOOKUPMODE(TRUE);
                                                              IF AssemblyBOM.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                AssemblyBOM.GETRECORD(BOMComp);
                                                                VALIDATE("Installed in Line No.",BOMComp."Line No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Installed in Item No.;
                                                              ESP=Instalado en nß prod.;
                                                              DEA=Installiert in Artikelnr.] }
  }
  KEYS
  {
    {    ;Parent Item No.,Line No.                ;Clustered=Yes }
    {    ;Type,No.                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 cannot be component of itself.;ESP=%1 no puede ser componente de si mismo.;DEA=%1 kann keine Komponente von sich selbst sein.';
      Text001@1006 : TextConst 'ENU=You cannot insert item %1 as an assembly component of itself.;ESP=No puede insertar el producto %1 como un componente del ensamblado de si mismo.;DEA=Der Artikel ''%1'' kann nicht als eigene Montagekomponente eingefÅgt werden.';
      Item@1001 : Record 27;
      ParentItem@1007 : Record 27;
      Res@1002 : Record 156;
      ItemVariant@1003 : Record 5401;
      BOMComp@1004 : Record 90;
      CalcLowLevelCode@1008 : Codeunit 99000793;
      AssemblyBOM@1005 : Page 36;

    PROCEDURE ValidateAgainstRecursion@3(ItemNo@1003 : Code[20]);
    VAR
      BOMComp@1001 : Record 90;
    BEGIN
      IF "Parent Item No." = ItemNo THEN
        ERROR(Text001,ItemNo);
      IF Type = Type::Item THEN BEGIN
        BOMComp.SETCURRENTKEY(Type,"No.");
        BOMComp.SETRANGE(Type,Type::Item);
        BOMComp.SETRANGE("No.","Parent Item No.");
        IF BOMComp.FINDSET THEN
          REPEAT
            BOMComp.ValidateAgainstRecursion(ItemNo);
          UNTIL BOMComp.NEXT = 0
      END
    END;

    BEGIN
    END.
  }
}

